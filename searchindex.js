Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/asarray","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/asarray.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[798,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[351,0,0,"-"],creation_functions:[352,0,0,"-"],data_type_functions:[358,0,0,"-"],data_types:[362,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[353,2,1,""],ones:[354,2,1,""],ones_like:[355,2,1,""],tril:[356,2,1,""],zeros:[357,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[358,1,1,""],finfo:[360,2,1,""],iinfo:[361,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[358,3,1,""],bits:[358,3,1,""],eps:[358,3,1,""],max:[358,3,1,""],min:[358,3,1,""],smallest_normal:[358,3,1,""]},"ivy.functional.backends.numpy.core":{device:[403,0,0,"-"],general:[405,0,0,"-"],gradients:[437,0,0,"-"],image:[442,0,0,"-"],linear_algebra:[446,0,0,"-"],logic:[450,0,0,"-"],math:[451,0,0,"-"],random:[453,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[404,1,1,""],clear_mem_on_dev:[403,2,1,""],dev:[403,2,1,""],dev_from_str:[403,2,1,""],dev_to_str:[403,2,1,""],gpu_is_available:[403,2,1,""],num_gpus:[403,2,1,""],to_dev:[403,2,1,""],tpu_is_available:[403,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[404,3,1,""],start:[404,3,1,""],stop:[404,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[405,2,1,""],arange:[406,2,1,""],argmin:[407,2,1,""],array:[408,2,1,""],asarray:[405,2,1,""],astype:[405,2,1,""],cast:[409,2,1,""],clip:[405,2,1,""],compile:[410,2,1,""],concatenate:[411,2,1,""],constant_pad:[405,2,1,""],container_types:[405,2,1,""],copy_array:[405,2,1,""],cumprod:[412,2,1,""],current_framework_str:[405,2,1,""],dtype:[413,2,1,""],dtype_bits:[414,2,1,""],dtype_from_str:[415,2,1,""],dtype_to_str:[416,2,1,""],floor:[405,2,1,""],floormod:[405,2,1,""],full:[417,2,1,""],gather:[418,2,1,""],gather_nd:[419,2,1,""],get_num_dims:[405,2,1,""],identity:[420,2,1,""],indices_where:[421,2,1,""],inplace_arrays_supported:[405,2,1,""],inplace_decrement:[422,2,1,""],inplace_increment:[423,2,1,""],inplace_update:[424,2,1,""],inplace_variables_supported:[405,2,1,""],is_array:[425,2,1,""],linear_resample:[426,2,1,""],linspace:[427,2,1,""],logspace:[428,2,1,""],matmul:[405,2,1,""],meshgrid:[405,2,1,""],multiprocessing:[405,2,1,""],one_hot:[429,2,1,""],round:[405,2,1,""],scatter_flat:[430,2,1,""],scatter_nd:[431,2,1,""],shape:[405,2,1,""],split:[432,2,1,""],squeeze:[433,2,1,""],to_list:[405,2,1,""],to_numpy:[405,2,1,""],to_scalar:[405,2,1,""],transpose:[434,2,1,""],unstack:[435,2,1,""],where:[405,2,1,""],zero_pad:[405,2,1,""],zeros_like:[436,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[438,2,1,""],is_variable:[439,2,1,""],stop_gradient:[440,2,1,""],variable:[441,2,1,""],variable_data:[437,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[443,2,1,""],gradient_image:[444,2,1,""],stack_images:[445,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[447,2,1,""],qr:[448,2,1,""],vector_to_skew_symmetric_matrix:[449,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[452,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[454,2,1,""],randint:[453,2,1,""],random_normal:[453,2,1,""],random_uniform:[453,2,1,""],seed:[453,2,1,""],shuffle:[453,2,1,""]},"ivy.functional.ivy":{array_api:[799,0,0,"-"],core:[850,0,0,"-"],nn:[1145,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[800,0,0,"-"],creation_functions:[801,0,0,"-"],data_type_functions:[808,0,0,"-"],data_types:[811,0,0,"-"],elementwise_functions:[812,0,0,"-"],function_and_method_signatures:[832,0,0,"-"],linear_algebra:[833,0,0,"-"],manipulation_functions:[838,0,0,"-"],searching_functions:[840,0,0,"-"],set_functions:[842,0,0,"-"],sorting_functions:[843,0,0,"-"],statistical_functions:[845,0,0,"-"],utility_functions:[847,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[800,4,1,""],nan:[800,4,1,""],pi:[800,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{asarray:[802,2,1,""],empty:[803,2,1,""],ones:[804,2,1,""],ones_like:[805,2,1,""],tril:[806,2,1,""],zeros:[807,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[809,2,1,""],iinfo:[810,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[813,2,1,""],asinh:[814,2,1,""],bitwise_and:[815,2,1,""],ceil:[816,2,1,""],cos:[817,2,1,""],cosh:[818,2,1,""],isfinite:[819,2,1,""],isnan:[820,2,1,""],less:[821,2,1,""],less_equal:[822,2,1,""],log10:[823,2,1,""],log1p:[824,2,1,""],log2:[825,2,1,""],logical_not:[826,2,1,""],logical_or:[827,2,1,""],negative:[828,2,1,""],sin:[829,2,1,""],sqrt:[830,2,1,""],tanh:[831,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[834,2,1,""],slodget:[835,2,1,""],svd:[836,2,1,""],vector_norm:[837,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[839,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[841,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[844,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[846,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[848,2,1,""],any:[849,2,1,""]},"ivy.functional.ivy.core":{compilation:[851,0,0,"-"],device:[853,0,0,"-"],dtype:[903,0,0,"-"],general:[927,0,0,"-"],gradients:[1022,0,0,"-"],image:[1038,0,0,"-"],linalg:[1045,0,0,"-"],logic:[1052,0,0,"-"],math:[1055,0,0,"-"],meta:[1069,0,0,"-"],multi_node:[1073,0,0,"-"],nest:[1117,0,0,"-"],random:[1129,0,0,"-"],reductions:[1136,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[852,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[853,1,1,""],DevClonedItem:[855,1,1,""],DevClonedIter:[856,1,1,""],DevClonedNest:[857,1,1,""],DevDistItem:[858,1,1,""],DevDistIter:[859,1,1,""],DevDistNest:[860,1,1,""],DevManager:[853,1,1,""],DevMapper:[862,1,1,""],DevMapperMultiProc:[863,1,1,""],MultiDev:[853,1,1,""],MultiDevItem:[865,1,1,""],MultiDevIter:[866,1,1,""],MultiDevNest:[867,1,1,""],Profiler:[868,1,1,""],clear_mem_on_dev:[869,2,1,""],default_device:[870,2,1,""],dev:[871,2,1,""],dev_clone:[872,2,1,""],dev_clone_array:[873,2,1,""],dev_clone_iter:[874,2,1,""],dev_clone_nest:[875,2,1,""],dev_dist:[876,2,1,""],dev_dist_array:[877,2,1,""],dev_dist_iter:[878,2,1,""],dev_dist_nest:[879,2,1,""],dev_from_str:[880,2,1,""],dev_to_str:[881,2,1,""],dev_unify:[882,2,1,""],dev_unify_array:[883,2,1,""],dev_unify_iter:[884,2,1,""],dev_unify_nest:[885,2,1,""],dev_util:[886,2,1,""],get_all_arrays_on_dev:[887,2,1,""],gpu_is_available:[888,2,1,""],num_arrays_on_dev:[889,2,1,""],num_cpu_cores:[890,2,1,""],num_gpus:[891,2,1,""],percent_used_mem_on_dev:[892,2,1,""],print_all_arrays_on_dev:[893,2,1,""],set_default_device:[894,2,1,""],set_split_factor:[895,2,1,""],split_factor:[896,2,1,""],split_func_call:[897,2,1,""],to_dev:[898,2,1,""],total_mem_on_dev:[899,2,1,""],tpu_is_available:[900,2,1,""],unset_default_device:[901,2,1,""],used_mem_on_dev:[902,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[853,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[853,3,1,""],da_tune_step:[853,3,1,""],dim_size:[853,3,1,""],ds_tune_step:[853,3,1,""],map:[853,3,1,""],repeated_config_check:[853,3,1,""],tune_step:[853,3,1,""],tuned:[853,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[862,3,1,""],map:[862,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[863,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[853,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[865,3,1,""],items:[865,3,1,""],keys:[865,3,1,""],shape:[865,3,1,""],values:[865,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[866,3,1,""],at_dev:[866,3,1,""],at_devs:[866,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[867,3,1,""],at_dev:[867,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[868,3,1,""],start:[868,3,1,""],stop:[868,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[903,1,1,""],DefaultFloatDtype:[903,1,1,""],DefaultIntDtype:[903,1,1,""],astype:[903,2,1,""],cast:[907,2,1,""],closest_valid_dtype:[908,2,1,""],convert_dtype:[909,2,1,""],default_dtype:[910,2,1,""],default_float_dtype:[911,2,1,""],default_int_dtype:[912,2,1,""],dtype:[913,2,1,""],dtype_bits:[914,2,1,""],dtype_from_str:[915,2,1,""],dtype_to_str:[916,2,1,""],invalid_dtype:[917,2,1,""],is_float_dtype:[918,2,1,""],is_int_dtype:[919,2,1,""],set_default_dtype:[920,2,1,""],set_default_float_dtype:[921,2,1,""],set_default_int_dtype:[922,2,1,""],unset_default_dtype:[923,2,1,""],unset_default_float_dtype:[924,2,1,""],unset_default_int_dtype:[925,2,1,""],valid_dtype:[926,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[903,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[903,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[903,3,1,""]},"ivy.functional.ivy.core.general":{"default":[950,2,1,""],abs:[928,2,1,""],all_equal:[929,2,1,""],arange:[930,2,1,""],arg_names:[931,2,1,""],argmin:[932,2,1,""],array:[933,2,1,""],array_equal:[934,2,1,""],arrays_equal:[935,2,1,""],asarray:[927,2,1,""],assert_supports_inplace:[936,2,1,""],broadcast_to:[937,2,1,""],cache_fn:[938,2,1,""],clip:[939,2,1,""],clip_matrix_norm:[940,2,1,""],clip_vector_norm:[941,2,1,""],concatenate:[942,2,1,""],constant_pad:[943,2,1,""],container_types:[944,2,1,""],copy_array:[945,2,1,""],cross:[946,2,1,""],cumprod:[947,2,1,""],cumsum:[948,2,1,""],current_framework_str:[949,2,1,""],einops_rearrange:[951,2,1,""],einops_reduce:[952,2,1,""],einops_repeat:[953,2,1,""],equal:[954,2,1,""],exists:[955,2,1,""],expand_dims:[956,2,1,""],floor:[957,2,1,""],floormod:[958,2,1,""],fourier_encode:[959,2,1,""],full:[960,2,1,""],gather:[961,2,1,""],gather_nd:[962,2,1,""],get_all_arrays_in_memory:[963,2,1,""],get_min_base:[964,2,1,""],get_min_denominator:[965,2,1,""],get_num_dims:[966,2,1,""],get_referrers_recursive:[967,2,1,""],has_nans:[968,2,1,""],identity:[969,2,1,""],indices_where:[970,2,1,""],inplace_arrays_supported:[971,2,1,""],inplace_decrement:[972,2,1,""],inplace_increment:[973,2,1,""],inplace_update:[974,2,1,""],inplace_variables_supported:[975,2,1,""],is_array:[976,2,1,""],isinf:[977,2,1,""],linear_resample:[978,2,1,""],linspace:[979,2,1,""],logspace:[980,2,1,""],match_kwargs:[981,2,1,""],matmul:[982,2,1,""],maximum:[983,2,1,""],meshgrid:[984,2,1,""],minimum:[985,2,1,""],multiprocessing:[986,2,1,""],num_arrays_in_memory:[987,2,1,""],one_hot:[988,2,1,""],ones:[989,2,1,""],print_all_arrays_in_memory:[990,2,1,""],queue_timeout:[991,2,1,""],repeat:[992,2,1,""],reshape:[993,2,1,""],round:[994,2,1,""],scatter_flat:[995,2,1,""],scatter_nd:[996,2,1,""],set_min_base:[997,2,1,""],set_min_denominator:[998,2,1,""],set_queue_timeout:[999,2,1,""],set_tmp_dir:[1000,2,1,""],shape:[1001,2,1,""],shape_to_tuple:[1002,2,1,""],split:[1003,2,1,""],squeeze:[1004,2,1,""],stable_divide:[1005,2,1,""],stable_pow:[1006,2,1,""],stack:[1007,2,1,""],supports_inplace:[1008,2,1,""],swapaxes:[1009,2,1,""],tile:[1010,2,1,""],tmp_dir:[1011,2,1,""],to_list:[1012,2,1,""],to_numpy:[1013,2,1,""],to_scalar:[1014,2,1,""],transpose:[1015,2,1,""],try_else_none:[1016,2,1,""],unstack:[1017,2,1,""],value_is_nan:[1018,2,1,""],where:[1019,2,1,""],zero_pad:[1020,2,1,""],zeros_like:[1021,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1022,1,1,""],adam_step:[1024,2,1,""],adam_update:[1025,2,1,""],execute_with_gradients:[1026,2,1,""],gradient_descent_update:[1027,2,1,""],is_variable:[1028,2,1,""],lamb_update:[1029,2,1,""],lars_update:[1030,2,1,""],optimizer_update:[1031,2,1,""],set_with_grads:[1032,2,1,""],stop_gradient:[1033,2,1,""],unset_with_grads:[1034,2,1,""],variable:[1035,2,1,""],variable_data:[1036,2,1,""],with_grads:[1037,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1022,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1039,2,1,""],float_img_to_uint8_img:[1040,2,1,""],gradient_image:[1041,2,1,""],random_crop:[1042,2,1,""],stack_images:[1043,2,1,""],uint8_img_to_float_img:[1044,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1046,2,1,""],inv:[1047,2,1,""],matrix_norm:[1048,2,1,""],pinv:[1049,2,1,""],qr:[1050,2,1,""],vector_to_skew_symmetric_matrix:[1051,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1053,2,1,""],logical_or:[1054,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1056,2,1,""],asin:[1057,2,1,""],atan2:[1059,2,1,""],atan:[1058,2,1,""],atanh:[1060,2,1,""],cosh:[1061,2,1,""],divide:[1062,2,1,""],erf:[1063,2,1,""],exp:[1064,2,1,""],log:[1065,2,1,""],sinh:[1066,2,1,""],tan:[1067,2,1,""],tanh:[1068,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1070,2,1,""],maml_step:[1071,2,1,""],reptile_step:[1072,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1073,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1118,2,1,""],copy_nest:[1119,2,1,""],index_nest:[1120,2,1,""],map:[1121,2,1,""],map_nest_at_index:[1122,2,1,""],map_nest_at_indices:[1123,2,1,""],multi_index_nest:[1124,2,1,""],nested_indices_where:[1125,2,1,""],nested_map:[1126,2,1,""],set_nest_at_index:[1127,2,1,""],set_nest_at_indices:[1128,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1130,2,1,""],randint:[1131,2,1,""],random_normal:[1132,2,1,""],random_uniform:[1133,2,1,""],seed:[1134,2,1,""],shuffle:[1135,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1137,2,1,""],reduce_max:[1138,2,1,""],reduce_mean:[1139,2,1,""],reduce_min:[1140,2,1,""],reduce_prod:[1141,2,1,""],reduce_std:[1142,2,1,""],reduce_sum:[1143,2,1,""],reduce_var:[1144,2,1,""]},"ivy.functional.ivy.nn":{activations:[1146,0,0,"-"],layers:[1154,0,0,"-"],losses:[1167,0,0,"-"],norms:[1171,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1147,2,1,""],leaky_relu:[1148,2,1,""],relu:[1149,2,1,""],sigmoid:[1150,2,1,""],softmax:[1151,2,1,""],softplus:[1152,2,1,""],tanh:[1153,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1155,2,1,""],conv1d_transpose:[1156,2,1,""],conv2d:[1157,2,1,""],conv2d_transpose:[1158,2,1,""],conv3d:[1159,2,1,""],conv3d_transpose:[1160,2,1,""],depthwise_conv2d:[1161,2,1,""],dropout:[1162,2,1,""],linear:[1163,2,1,""],lstm_update:[1164,2,1,""],multi_head_attention:[1165,2,1,""],scaled_dot_product_attention:[1166,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1168,2,1,""],cross_entropy:[1169,2,1,""],sparse_cross_entropy:[1170,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1172,2,1,""]},"ivy.stateful":{activations:[1176,0,0,"-"],converters:[1179,0,0,"-"],initializers:[1181,0,0,"-"],layers:[1190,0,0,"-"],module:[1202,0,0,"-"],norms:[1204,0,0,"-"],optimizers:[1206,0,0,"-"],sequential:[1212,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1177,1,1,""],GELU:[1178,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1177,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1178,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1180,2,1,""]},"ivy.stateful.initializers":{Constant:[1181,1,1,""],FirstLayerSiren:[1183,1,1,""],GlorotUniform:[1184,1,1,""],KaimingNormal:[1181,1,1,""],Ones:[1186,1,1,""],Siren:[1187,1,1,""],Uniform:[1181,1,1,""],Zeros:[1189,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1181,3,1,""],create_variables:[1181,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1183,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1184,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1181,3,1,""],create_variables:[1181,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1187,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1181,3,1,""],create_variables:[1181,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1189,3,1,""]},"ivy.stateful.layers":{Conv1D:[1191,1,1,""],Conv1DTranspose:[1192,1,1,""],Conv2D:[1193,1,1,""],Conv2DTranspose:[1194,1,1,""],Conv3D:[1195,1,1,""],Conv3DTranspose:[1196,1,1,""],DepthwiseConv2D:[1197,1,1,""],Dropout:[1198,1,1,""],LSTM:[1199,1,1,""],Linear:[1200,1,1,""],MultiHeadAttention:[1201,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1191,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1192,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1196,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1198,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1199,3,1,""],get_initial_state:[1199,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1200,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1201,3,1,""]},"ivy.stateful.module":{Module:[1203,1,1,""]},"ivy.stateful.module.Module":{__init__:[1203,3,1,""],build:[1203,3,1,""],build_mode:[1203,3,1,""],built:[1203,3,1,""],check_submod_rets:[1203,3,1,""],get_mod_key:[1203,3,1,""],mod_depth:[1203,3,1,""],mod_height:[1203,3,1,""],mod_with_top_mod_key_chain:[1203,3,1,""],save_weights:[1203,3,1,""],show_mod_in_top_mod:[1203,3,1,""],show_structure:[1203,3,1,""],show_v_in_top_v:[1203,3,1,""],sub_mods:[1203,3,1,""],track_submod_call_order:[1203,3,1,""],track_submod_rets:[1203,3,1,""],v_with_top_v_key_chains:[1203,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1205,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1205,3,1,""]},"ivy.stateful.optimizers":{Adam:[1207,1,1,""],LAMB:[1208,1,1,""],LARS:[1209,1,1,""],Optimizer:[1210,1,1,""],SGD:[1211,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1207,3,1,""],set_state:[1207,3,1,""],state:[1207,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1208,3,1,""],set_state:[1208,3,1,""],state:[1208,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1209,3,1,""],set_state:[1209,3,1,""],state:[1209,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],step:[1210,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.sequential":{Sequential:[1213,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1213,3,1,""]},"ivy.verbosity":{cprint:[1218,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1217,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1206,1207,1208],"02886":1173,"100":[1073,1173,1215],"141592653589793":800,"2021":1173,"2102":1173,"360":[1055,1067],"718281828459045":800,"754":[800,808,809,812,830],"999":[1022,1024,1025,1029,1206,1207,1208],"abstract":[853,868,1173,1206,1210],"boolean":[40,41,812,815,826,827,853,888,900,903,917,926,927,929,934,935,968,970,971,975,976,977,1008,1018,1022,1028,1052,1053,1054,1069,1070,1071,1073],"break":43,"case":[15,18,19,40,41,42,43,812,813,814,816,817,818,823,825,829,830,853,892,899,902,927,930,993,995,996,1045,1048,1050,1073,1117,1120,1124,1173,1190,1201,1202,1203,1206,1210,1219],"catch":[927,950],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,358,403,404,808,810,853,855,856,857,858,859,860,862,863,865,866,867,868,880,881,903,927,931,981,1022,1036,1073,1117,1119,1126,1167,1169,1170,1173,1176,1177,1178,1179,1180,1181,1183,1184,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1219],"default":[15,18,19,40,41,42,43,801,802,803,804,805,806,807,833,834,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,862,863,870,871,875,876,877,878,879,882,883,884,885,892,895,896,897,902,903,910,911,912,913,927,929,930,932,940,941,942,943,946,947,948,959,960,961,966,968,969,978,980,981,984,986,989,991,992,995,996,999,1001,1003,1005,1006,1015,1017,1018,1022,1025,1027,1028,1029,1030,1031,1033,1037,1045,1048,1050,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1151,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],"final":[40,41,43,927,959,979,980,1073,1190,1201,1216],"float":[40,41,42,800,801,803,804,807,808,809,812,813,814,816,817,818,823,825,829,830,831,833,837,853,862,863,886,892,895,899,902,903,911,918,927,930,940,941,943,959,960,964,965,980,997,998,999,1005,1006,1022,1024,1025,1027,1029,1030,1031,1038,1040,1044,1055,1062,1069,1070,1071,1072,1073,1129,1132,1133,1146,1148,1154,1162,1165,1166,1167,1168,1169,1170,1171,1172,1190,1198,1201,1204,1205,1206,1207,1208,1209,1210,1211],"function":[15,40,41,43,353,354,355,356,357,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,800,802,803,804,805,806,807,809,810,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,839,841,844,846,848,849,851,852,853,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1206,1209,1210,1211,1215,1216,1219],"import":[43,1173,1216,1219],"int":[40,41,42,43,352,353,354,356,357,453,801,803,804,806,807,808,809,810,833,834,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,875,876,877,878,879,882,883,884,885,890,891,897,903,912,914,919,927,932,937,942,943,947,948,951,952,953,956,959,960,961,966,969,978,979,980,988,989,992,993,995,996,1001,1002,1003,1004,1007,1009,1010,1015,1017,1020,1022,1024,1025,1029,1038,1042,1043,1045,1048,1069,1070,1071,1072,1073,1117,1126,1129,1130,1131,1133,1134,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1155,1156,1157,1158,1159,1160,1161,1165,1167,1169,1170,1171,1172,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1204,1205],"long":[43,1154,1164],"new":[40,41,43,453,801,803,804,805,807,812,824,903,907,927,928,937,951,952,953,956,959,960,961,962,989,993,995,996,997,998,1005,1006,1007,1022,1025,1027,1029,1030,1031,1038,1040,1042,1044,1055,1060,1061,1066,1068,1073,1117,1127,1128,1129,1130,1171,1172,1173,1179,1180,1190,1200,1204,1205,1206,1207,1208,1209,1210,1211,1216,1219],"public":[927,944],"return":[15,16,17,18,19,40,41,42,43,453,801,803,804,805,806,807,812,813,814,815,816,817,818,819,820,821,822,823,825,826,827,828,829,830,831,833,834,835,836,837,840,841,843,844,845,846,847,848,849,851,852,853,862,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,888,889,891,892,896,897,898,899,900,902,903,907,908,909,910,911,912,913,914,915,916,917,918,919,926,927,928,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,992,993,994,995,996,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1179,1180,1190,1199,1200,1206,1210,1215,1216,1219],"short":[43,1154,1164,1173,1219],"static":[40,41,851,852],"super":1073,"true":[40,41,42,405,410,437,440,453,454,812,819,820,826,827,833,836,837,840,841,843,844,847,848,849,851,852,853,927,929,936,938,955,959,968,970,1018,1019,1022,1025,1027,1028,1029,1030,1031,1033,1045,1048,1069,1070,1071,1072,1073,1117,1118,1125,1129,1130,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1154,1162,1167,1168,1169,1170,1190,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211],"try":[40,41,927,1016,1073],"var":[40,41,1069,1070,1071,1219],"while":[40,41,42,812,826,827,1073],AND:[812,815,847,848,1052,1053],But:1219,For:[43,812,813,814,816,817,818,823,825,829,830,927,930,939,1007,1022,1028,1036,1045,1050,1055,1056,1173,1179,1180,1216,1219],Its:[1055,1058],NOT:[812,826],Not:800,One:[40,41,43,927,952,993,1129,1131,1219],Ones:[1173,1181],PRs:43,Such:[927,944],That:1216,The:[15,16,17,18,19,40,41,42,43,801,806,812,813,814,815,816,817,818,819,820,821,822,823,825,826,827,829,830,831,833,834,835,836,837,838,839,843,844,847,848,849,851,852,853,862,863,869,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,892,895,896,897,898,899,902,903,907,908,909,914,915,916,917,926,927,930,933,934,937,938,940,941,942,943,945,946,949,950,954,959,961,962,969,972,973,974,976,978,980,982,984,986,989,992,993,995,996,997,998,999,1002,1003,1004,1005,1006,1007,1010,1018,1021,1022,1024,1025,1027,1029,1030,1031,1033,1036,1038,1040,1042,1044,1045,1048,1050,1055,1056,1057,1058,1062,1063,1064,1065,1067,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1173,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1216,1219],There:[43,1173,1216],These:[43,1173],Use:43,Used:[1117,1118,1125,1202,1203],Using:[1173,1174,1219],With:[40,41,840,841,1045,1048,1136,1138,1139,1140,1141,1142,1143,1144,1173,1215,1219],__array__:[927,933],__call__:[1190,1201,1202,1203],__del__:1073,__dict__:[1073,1216],__enter__:1073,__exit__:1073,__getitem__:1073,__getstate__:1073,__init__:[40,41,42,43,59,60,84,218,358,359,403,404,485,615,853,854,861,862,863,864,865,866,867,868,903,904,905,906,1022,1023,1073,1077,1084,1173,1176,1177,1178,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1219],__iter__:1073,__len__:1073,__next__:1073,__repr__:1073,_assign_vari:1215,_axi:1073,_base:[1117,1118,1125],_compute_node_da_ratio:1073,_compute_node_strs_da:1073,_concat_unify_arrai:1073,_counter:1073,_cur_framework:[43,1073],_da_direct:1073,_da_directions_flip:1073,_da_step_tim:1073,_da_tim:1073,_da_tune_count:1073,_data:1073,_delta_da_dim_s:1073,_delta_sf:1073,_dict:1073,_dim_siz:1073,_first_da_tune_step:1073,_first_ns_tune_step:1073,_fn:1073,_forward:[1173,1215],_get_kalman_param:1219,_get_prior:1219,_get_some_model:1219,_index:[1117,1118,1125],_input_queu:1073,_length:1073,_max_depth:1073,_max_node_dim_step_ratio:1073,_max_node_dim_step_s:1073,_max_split_factor_step_s:1073,_mean_unify_arrai:1073,_min_bas:[927,1006,1171,1172,1204,1205],_min_denomin:[927,1005],_min_node_dim_s:1073,_min_sf_tune_step:1073,_min_unit_node_tune_step:1073,_model:1219,_node_mapp:1073,_node_percent_mem:1073,_node_str:1073,_node_str_da_ratio:1073,_node_strs_da:1073,_node_strs_kei:1073,_node_strs_n:1073,_node_util:1073,_ns_step_tim:1073,_ns_time:1073,_ns_tune_count:1073,_num_nod:1073,_num_work:1073,_observed_config:1073,_output_queu:1073,_paramet:1215,_percent_mem_inc_per_sf:1073,_percent_mem_inc_per_unit_da_dim:1073,_percent_util_inc_per_unit_da_dim:1073,_ret_fn:1073,_safety_factor:1073,_save_dir:1073,_shift_da_split:1073,_shift_n:1073,_slice:1073,_step:[1206,1210],_sum_unify_arrai:1073,_timeout:1073,_tune:1073,_tune_da:1073,_tune_n:1073,_tune_step:1073,_unit_da_tune_count:1073,_unroll_step:1219,_with_node_mappig:1073,_worker:1073,_worker_class:1073,_worker_fn:1073,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,853,862,868,1073,1202,1203,1206,1210],abil:1173,abl:[40,41],about:[808,809,810],abov:[43,801,806,833,834,1129,1131],above_height:[40,41],abs:[258,405,536,667,833,837,927,1073],absolut:[40,41,833,835,927,928],abstractmethod:1073,accept:[15,43,812,826,827,1173],access:[40,41,43,1216],accord:[40,41,808,809,927,943,961,995,996,1015,1020],accordingli:[833,837,847,848,849],accur:[59,358,403,404,853,865,866,867,868,903,1022,1181,1183,1184,1186,1187,1189],aco:[751,1055],acosh:[88,222,363,489,619,812],across:[40,41,853,862,863,872,873,875,876,877,878,879,885,895,896,927,932,934,935,1073,1117,1121],act:43,activ:[1147,1148,1149,1150,1151,1152,1153,1173,1177,1178],actual:1216,adam:[1022,1024,1025,1029,1173,1206,1208,1215],adam_step:1022,adam_upd:1022,adapt:[1022,1030,1206,1209],add:[40,41,43,1073,1167,1168,1169,1170,1171,1172,1173,1204,1205,1216],added:[43,927,1005,1006,1212,1213],adding:[43,927,937],addit:[40,41,43,927,951,952,953,1171,1172,1190,1200],addition:43,address:43,adher:43,adjac:[927,930],adopt:[43,927,944],affect:[927,930],affin:[1204,1205],after:[812,830,927,978,1022,1025,1026,1027,1029,1030,1031,1038,1039,1171,1172,1206,1207,1208,1209,1210,1211,1219],after_1:[927,943,1020],after_n:[927,943,1020],again:43,against:[40,41,840,841,1045,1048,1136,1138,1139,1140,1141,1142,1143,1144],agnost:[43,1173,1215,1216],aim:1219,algebra:1045,algorithm:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197,1219],align:[40,41,43,927,937],aliv:[853,887,889,893,927,963,987,990],all:[15,16,17,18,19,40,41,43,124,248,399,525,655,801,806,833,837,838,839,847,851,852,853,862,887,893,927,928,929,934,935,944,963,969,990,1004,1045,1050,1069,1070,1071,1072,1073,1117,1118,1119,1125,1126,1129,1130,1133,1136,1138,1139,1140,1141,1142,1143,1144,1154,1164,1173,1216,1219],all_depth:[40,41],all_equ:927,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1117,all_tru:[40,41],alloc:[43,801,806,853,1073],allow:[927,979,980,981,1202,1203],allow_dupl:[927,981],alon:[853,892,902,1073,1173],along:[40,41,43,453,833,837,838,839,840,841,843,844,845,846,847,848,849,853,876,877,878,879,882,883,884,885,897,927,942,947,948,961,978,979,980,992,1003,1007,1010,1017,1045,1048,1069,1070,1071,1072,1073,1129,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144],alongsid:[1215,1216],alpha:[1146,1148],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,812,816,853,1073],also:[40,41,43,927,930,1022,1025,1069,1070,1071,1072,1117,1118,1119,1125,1126,1154,1163,1173,1190,1200,1215],altern:1215,alwai:[40,41,43,1022,1028,1033],among:[40,41],amount:[853,899,1073,1173],angl:[812,818,831,1055,1056,1059],ani:[15,16,17,18,19,40,41,43,124,248,399,525,655,801,802,812,822,847,851,852,853,855,858,862,863,865,874,875,878,879,884,927,929,930,933,950,951,952,953,954,955,968,976,981,1005,1006,1022,1026,1073,1117,1118,1121,1125,1126,1127,1128,1129,1133,1173,1179,1180,1202,1203,1215,1216,1219],anoth:[40,41,43,903,909,1173],another_backend:43,anyth:[43,1219],anywai:43,apart:43,api:[1173,1174],appear:[43,927,956],append:[40,41,833,834,1073],appli:[15,18,19,40,41,833,836,927,951,952,953,1022,1029,1030,1052,1053,1054,1069,1070,1071,1117,1121,1124,1126,1146,1147,1148,1149,1150,1151,1152,1153,1154,1163,1165,1166,1171,1172,1173,1176,1177,1178,1204,1205],applic:[1117,1121,1126,1154,1165,1166,1173,1219],appropri:[840,841],approxim:[812,813,814,817,818,823,824,825,829,831,1146,1147],arang:[135,258,405,453,536,667,927,979,980],arbitrari:[40,41,853,882,883,885,1073],arc:[1055,1059],arcco:[1055,1056],arctan:[1055,1058],area:[812,813,814,1173],arg:[15,16,17,40,41,43,59,63,853,862,875,879,885,897,927,951,952,953,996,1073,1179,1180,1202,1203],arg_nam:927,arg_stateful_idx:[1202,1203],argmax:[117,242,392,518,648,840],argmin:[135,405,536,667,927],args_clon:1073,args_dist:1073,args_to_ivi:[15,1173],args_to_n:[15,1173],args_uni:1073,argsort:[120,245,395,521,651,843],argument:[15,16,17,18,19,40,41,42,43,59,63,851,852,853,862,863,875,879,885,927,930,931,938,950,981,996,1055,1056,1073,1117,1121,1179,1180,1202,1203],aris:[1173,1219],arithmet:[1136,1139,1142,1144],arithmetic_oper:[0,1,2],around:[40,41,42],arr:453,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,135,258,405,453,536,667,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,853,871,872,873,876,877,878,879,882,883,884,885,887,889,893,897,898,903,907,913,918,919,927,928,929,930,932,934,935,936,937,939,940,941,942,943,945,946,947,948,951,952,953,954,956,957,958,959,960,961,962,963,966,968,969,970,971,972,973,974,976,977,978,979,980,982,983,984,985,987,988,989,990,992,993,994,995,996,1001,1003,1004,1007,1008,1009,1010,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1024,1025,1028,1029,1033,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1073,1117,1119,1126,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1190,1198,1199,1201,1206,1210,1215,1216],arrang:[927,951],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,352,353,354,355,356,357,358,360,361,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849],array_api_methods_to_test:43,array_equ:[258,667,927],array_lik:[453,927,933],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,927],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1173],arraywithgener:[22,1173],arraywithgradi:[24,1173],arraywithimag:[26,1173],arraywithlinalg:[28,1173],arraywithlog:[30,1173],arraywithmath:[32,1173],arraywithmeta:[34,1173],arraywithrandom:[36,1173],arraywithreduct:[38,1173],arriv:[40,41,42],articl:1173,arxiv:1173,as_arrai:[40,41,927,966,1001],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[403,405,413,853,871,903,910,911,912,913],as_tensor:405,as_vari:[40,41],as_zero:[40,41],asarrai:[405,801,927],ascend:[843,844],asin:[751,1055],asinh:[88,363,489,619,812],aspect:[1038,1043],assert:[40,41,927,936,1073],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:927,associ:[43,1045,1051],assum:[812,817,829,1216,1219],astyp:[405,903],asynchron:[40,41,42],at_dev:[40,42,853,866,867],at_kei:[40,41],at_key_chain:[40,41],at_nod:1073,atan2:[751,1055],atan:[751,1055],atanh:[751,1055],attent:[43,1154,1165,1166,1190,1201],attribut:[0,6,40,41,808,809,810,927,1021],audienc:[1173,1216],author:1173,automat:43,avail:[40,41,43,853,888,890,891,900,927,952,1073],averag:[1022,1024,1025,1029,1069,1070,1071,1136,1139],average_across_step:[1069,1070,1071],avoid:[43,853,1073,1216],axes:[40,41,43,405,434,446,447,833,837,838,839,840,841,845,846,847,848,849,853,897,927,932,943,956,1009,1015,1020,1045,1048,1073,1136,1138,1139,1140,1141,1142,1143,1144],axes_length:[40,41,927,951,952,953],axi:[40,41,405,407,411,412,418,426,427,428,432,433,435,833,834,837,838,839,840,841,843,844,845,846,847,848,849,853,855,858,865,876,877,878,879,882,883,884,885,897,927,932,942,943,946,947,948,956,961,978,979,980,992,1003,1004,1007,1009,1010,1017,1020,1073,1129,1135,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1167,1169,1170],axis0:[40,41,927,1009],axis1:[40,41,833,834,927,1009],axis2:[833,834],back:[43,1202,1203,1206,1210],backend:[15,17,19,40,41,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,853,888,891,900,903,909,917,926,927,971,975,1022,1025,1027,1029,1030,1031,1036,1073,1173,1174,1179,1180,1206,1207,1208,1209,1210,1211,1215,1216,1219],backend_nam:43,background:[1173,1216],backprop:1219,backward:[847,848,849,1215],band:[927,959],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,358,403,404,405,428,812,823,824,825,853,855,856,857,858,859,860,862,863,865,866,867,868,903,927,964,980,997,1006,1022,1073,1136,1137,1173,1176,1177,1178,1181,1183,1184,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1219],basi:43,batch:[40,41,833,836,837,853,895,896,927,959,969,1038,1042,1069,1070,1071,1072,1073,1154,1163,1171,1172,1204,1205],batch_shap:[405,420,927,969,988,1038,1039,1040,1041,1042,1043,1044,1045,1051,1129,1130,1154,1164,1165,1166,1190,1199],batch_siz:[453,454,1073,1129,1130,1154,1155,1156,1157,1158,1159,1160,1161],bayesian:1219,becaus:[43,927,930],becom:[43,927,939,1055,1059,1219],been:[927,951,952,953,1129,1130],befor:[40,41,43,853,897,1069,1070,1071,1073,1117,1126,1136,1138,1139,1140,1141,1142,1143,1144,1154,1165,1166,1219],before_1:[927,943,1020],before_n:[927,943,1020],begin:[1117,1118,1125,1216],behaviour:[43,1219],behind:[1022,1025,1027,1029,1030,1031,1173],being:[40,41,43,927,930,991,999,1073],believ:43,belong:[40,41],below:[43,801,806,833,834,1173,1216,1219],below_depth:[40,41],benefit:1173,bernoul:[1154,1162,1190,1198],best:[43,927,981,1173],beta1:[1022,1024,1025,1029,1206,1207,1208],beta2:[1022,1024,1025,1029,1206,1207,1208],beta:[1171,1172],between:[40,41,42,808,809,927,930,1045,1050,1117,1121,1129,1131,1167,1169,1170,1206,1208],bia:[1154,1163,1164,1190,1191,1192,1193,1194,1195,1196,1197,1200],bias_initi:[1190,1191,1192,1193,1194,1195,1196,1197,1200],bilinear:[1038,1039],bilinear_resampl:[169,311,442,576,737,1038],bilinearli:[1038,1039],binari:[812,815,1167,1168],binary_cross_entropi:1167,bit:[358,808,809,810,903,914,1038,1040,1044,1173],bitwis:[812,815],bitwise_and:[88,222,363,489,619,812],bitwise_oper:[0,7,8],block:[1173,1216],bool:[15,18,19,40,41,42,43,812,819,820,821,822,826,827,833,836,837,840,841,843,844,845,846,847,848,849,851,852,853,871,884,888,892,897,900,902,903,913,927,929,934,935,947,950,954,955,959,966,968,976,981,1001,1003,1017,1018,1019,1022,1025,1026,1027,1028,1029,1030,1031,1033,1045,1048,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1154,1162,1179,1180,1190,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211],both:[43,927,946],bottom:1173,boundari:[40,41,1129,1133],branch:[43,851,852],brittl:43,broadcast:[40,41,812,815,821,822,827,833,837,840,841,847,848,849,927,937,954,983,984,985,992,1045,1048,1055,1059,1062,1136,1138,1139,1140,1141,1142,1143,1144],broadcast_to:[258,667,927],build:[1073,1173,1190,1201,1202,1203],build_mod:[1190,1201,1202,1203],builder:[43,1173],built:[853,927,930,1073,1190,1201,1202,1203],busi:43,bypass:1216,cach:[853,869,927,938],cache_fn:927,calcul:[40,41,42,812,813,814,817,818,823,824,825,829,830,831,1055,1062],call:[43,853,897,927,991,999,1016,1022,1026,1073,1117,1118,1121,1125,1190,1201,1202,1203,1206,1210,1216,1219],callabl:[40,41,851,852,853,862,863,897,927,938,950,952,981,1016,1069,1070,1071,1072,1073,1117,1121,1122,1123,1125,1126,1154,1165],can:[43,801,802,853,895,896,897,927,993,1038,1040,1073,1173,1215,1216,1219],cancel_join_thread:1073,cannot:43,captur:1173,cast:[40,41,135,258,405,536,667,903,927,942,1038,1040,1044],catch_except:[927,950],categori:43,caus:43,ceil:[88,222,363,489,619,812,927,930],cell:[1154,1164,1190,1199],certain:[40,41,927,930,979,980],chain:[40,41,1069,1070,1071,1212,1213],chang:[43,853,927,993,1073,1117,1119,1126,1173,1215],channel:[927,959,1038,1040,1041,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200],check:[15,16,17,18,19,40,41,43,853,892,902,903,908,917,926,927,936,955,968,976,1008,1018,1022,1028,1073,1117,1118,1125,1173,1216],check_nest:[1117,1125],check_shap:[40,41],check_submod_ret:[1202,1203],check_typ:[40,41],choic:[1173,1216],choleski:[741,1045],choos:[812,826,827,927,1019,1045,1050,1055,1059,1173],choose_random_framework:59,chosen:[40,41,927,930,1019],chunk:[853,895,896,897,1073],chunk_siz:[853,897,1073],circl:[1055,1056,1057],clark:1173,clear:[43,853,869,1073],clear_framework_stack:59,clear_mem_on_dev:[403,659,853],click:1173,clip:[40,41,258,405,667,927,940,941,983,985,1173],clip_matrix_norm:927,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,927],clipped_delta:1073,clone:[40,41,853,872,873,874,875,1073],clone_arrai:1073,clone_it:1073,clone_nest:1073,clonedit:1073,cloneditem:1073,clonednest:1073,close:[43,1038,1043,1055,1057,1073,1219],closest:[812,816,903,908],closest_valid_dtyp:903,code:[40,41,42,43,453,1173,1174,1215,1216],codebas:[853,895,896,1073,1173,1216,1219],codomain:[812,813,814,817,818,823,825,829,830,831],colab:1173,collect:[15,40,41,403,405,437,442,446,450,451,453,851,853,903,927,1022,1038,1045,1052,1055,1073,1117,1129,1136,1146,1154,1167,1171,1176,1190,1204,1206],color:[40,41,42,1217,1218],column:[927,969],combin:[40,41,42,1038,1043,1173,1219],combined_batch_s:1073,come:1216,command:1173,comment:43,commit:1219,common:[40,41,43,1055,1059],common_key_chain:[40,41],commun:[43,1173,1216],communuti:43,compar:[40,41,843,844,927,929,934,935],comparison_oper:[0,9,10],compat:[812,815,821,822,827,833,837,847,848,849,927,954,993,1055,1062,1173,1219],compil:[258,405,667,1202,1203,1206,1207,1208,1209,1210,1211],compile_on_next_step:[1202,1203,1206,1207,1208,1209,1210,1211],complet:[40,41,43,1045,1050,1073],complex:[1216,1219],compliant:[812,826,827],compon:[927,946],composit:43,comput:[40,41,812,815,821,822,826,827,828,833,835,837,845,846,853,897,927,940,941,947,948,954,982,1022,1024,1025,1026,1027,1029,1030,1031,1033,1035,1038,1041,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1063,1064,1065,1067,1117,1121,1136,1137,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1163,1165,1167,1168,1169,1170],concat:[40,41,853,882,883,884,885,897,927,959,1073],concaten:[40,41,135,258,405,536,667,927,959,1073,1173],concatten:[40,41,853,882,883,884,885,897,1073],condit:[405,851,852,927,1019,1117,1125],conditon:[1117,1125],config:[40,41,1073],config_list:1073,configur:[40,41],conflict:43,conform:43,conjunct:1216,connect:[1190,1200,1201],consid:[40,41,812,826,827,1045,1050,1215,1219],consist:[40,41,853,885,1073,1136,1137,1202,1203,1216],constant:[853,862,863,927,943,1073,1117,1121,1167,1168,1169,1170,1171,1172,1181,1182,1186,1189,1202,1203,1204,1205,1216],constant_kwarg:1073,constant_pad:[258,405,536,667,927],constitu:[40,41],construct:[927,1010,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215],constructor:[40,41,42,927,931,1212,1213],consum:[853,1073],cont_feat_dim:[1154,1165],contaienr:[40,41],contain:[15,18,19,42,801,804,806,807,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,837,845,846,847,848,849,853,872,876,897,903,907,927,928,932,939,940,941,944,954,968,983,985,994,1005,1006,1022,1024,1025,1027,1029,1030,1031,1055,1062,1069,1070,1071,1072,1073,1129,1130,1136,1138,1139,1140,1142,1144,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[405,667,927],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[405,927,986,1154,1165,1190,1201],context_dim:[1190,1201],contextmanag:[59,60],continu:[43,1073,1216],contract:[40,41,1136,1137],contribut:[1173,1174],contributor:[43,1173],control:1173,conv1d:[200,341,467,790,1154,1173,1190],conv1d_transpos:[200,341,467,790,1154],conv1dtranspos:[1173,1190],conv2d:[200,341,467,601,790,1154,1173,1190],conv2d_transpos:[200,341,467,790,1154],conv2dtranspos:[1173,1190],conv3d:[200,341,467,601,790,1154,1173,1190],conv3d_transpos:[200,341,467,790,1154],conv3dtranspos:[1173,1190],convent:[40,41,1136,1137],conver:[853,869,880,892,899,902,1073],convers:[16,17,18,19,40,41,1073,1173],convert:[15,16,17,18,19,40,41,43,801,802,853,880,881,903,909,915,916,927,1002,1013,1014,1038,1040,1044,1045,1051,1073,1117,1119,1126,1173,1180],convert_dtyp:903,convolut:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],cool:43,cooler:43,coordin:[927,984,1055,1056,1057,1059],copi:[40,41,43,453,927,945,1073,1117,1119],copy_arrai:[405,667,927],copy_nest:1117,core:[403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,851,852,853,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1173],corner:43,correct:[43,1173,1216],correctli:[40,41,43,840,841,1045,1048,1055,1059,1136,1138,1139,1140,1141,1142,1143,1144],correspond:[40,41,927,942,1129,1130],cos:[88,363,489,619,812,927,959,1055,1056,1067,1216],cosh:[88,363,489,619,751,812,1055],cosin:[812,813,817,818,1055,1056,1061],cost:[1022,1024,1025,1027,1029,1030,1031,1069,1070,1071,1072],cost_fn:[1069,1072],could:1219,count:[40,41,838,839,847,848,849,1073,1136,1141,1143],cours:43,cprint:1217,cpu:[40,41,43,853,890,892,898,899,902,927,930,933,961,962,969,979,980,988,989,995,996,1021,1073,1129,1130,1131,1132,1133,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213,1215,1216],creat:[40,41,801,802,803,804,805,807,853,862,863,927,930,933,960,961,962,969,979,980,988,989,995,996,1012,1021,1022,1035,1073,1129,1130,1131,1132,1133,1173,1174,1179,1180,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1219],create_if_abs:[40,41],create_vari:1181,creation:[40,41,42,43],creation_funct:[352,353,354,355,356,357,801,802,803,804,805,806,807],crop:[1038,1042],crop_siz:[1038,1042],cross:[258,667,927,1167,1168,1169,1170],cross_entropi:1167,cuda:[40,41,853,862,881,898,927,930,933,961,962,969,979,980,988,989,995,996,1021,1073,1129,1130,1131,1132,1133,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213],cumprod:[135,258,405,667,927],cumsum:[667,927],cumul:[927,947,948],current:[40,41,42,43,853,862,886,887,889,893,903,909,917,926,927,949,963,971,975,987,990,1073,1117,1118,1125,1173,1219],current_framework:59,current_framework_str:[405,667,927,1073],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1154,1155,1156,1157,1158,1159,1160],d_out:[1154,1155,1156,1157,1158,1159,1160],da_can_termin:1073,da_dim_s:[853,1073],da_direct:1073,da_tune_step:[853,1073],dai:[43,1219],daniel:1173,data:[40,41,42,43,801,802,803,804,805,806,807,809,810,812,813,814,815,816,817,818,819,820,821,822,823,825,826,827,829,830,831,833,834,837,838,839,843,844,847,848,849,853,855,856,857,858,859,860,865,866,867,881,903,907,908,909,913,914,915,916,917,918,919,926,927,930,933,954,960,969,976,989,993,1004,1008,1021,1022,1028,1036,1055,1062,1073,1154,1163,1173],data_format:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],data_type_funct:[358,360,361,808,809,810],dataset:[40,41],datatyp:[40,41,903,908,918,919],dcdw:[1022,1024,1025,1027,1029,1030],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1022,1029,1030,1206,1208,1209],decay_lambda:[1022,1029,1030,1206,1208,1209],decid:[40,41,1219],decompos:[1045,1046,1050],decomposit:[833,836,1045,1046,1050],decrement:[927,972],dedic:[1022,1036,1179,1180],deep:[40,41,1173],deep_copi:[40,41],deeper:[853,875,879,885,1073,1117,1126,1173],deepli:[1117,1119],def:[43,60,84,218,359,485,615,854,861,864,904,905,906,1023,1073,1077,1084,1173,1182,1185,1188,1215,1216,1219],default_dev:43,default_devic:853,default_dtyp:[43,903],default_float_dtyp:903,default_int_dtyp:903,default_key_color:[40,41,42],default_nod:1073,default_rng:453,default_v:[927,950],defaultdevic:[853,854],defaultdtyp:[903,904],defaultfloatdtyp:[903,905],defaultintdtyp:[903,906],defin:[43,927,946,988,1021,1129,1131],definit:43,degre:[1055,1067],del:1073,delai:43,delet:43,delta:[1022,1024,1073],delta_dim_s:1073,delta_percent_mem:1073,delta_sf:1073,delta_util:1073,demo:1173,denomin:[927,958,965,998,1005,1006,1171,1172,1204,1205],denot:43,dens:[1190,1200],depend:[812,813,814,817,818,823,824,825,829,831,833,836,843,844,927,1019,1173],depth:[40,41,405,429,853,875,879,885,927,967,988,1073,1117,1126,1202,1203],depth_cutoff:[40,41],depthwis:[1154,1161,1190,1197],depthwise_conv2d:[200,341,467,601,790,1154],depthwiseconv2d:[1173,1190],deriv:[801,805,1022,1024,1025,1027,1029,1030,1031,1117,1119,1126,1173,1202,1206,1210,1212],descend:[833,836,843,844],descent:[1022,1027,1206,1211],describ:[40,41,1136,1137],descript:[833,837],design:[1173,1174],desir:[40,41,853,898,903,907,927,930,933,969,970,989,1021,1038,1043,1073,1136,1138,1139,1140,1142,1144],desired_aspect_ratio:[442,445,1038,1043],desired_percent_increas:1073,detail:1219,detect:[40,41,1117,1118,1125],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,812,813,814,815,817,818,819,820,823,825,829,830,833,834,835,837,847,848,849,853,888,890,891,900,903,907,908,914,917,918,919,926,927,929,930,933,934,935,968,971,975,976,1008,1018,1022,1028,1055,1062,1069,1070,1071,1072,1073,1154,1165],dev:[40,41,42,43,128,252,352,355,403,405,406,408,418,419,420,427,428,429,430,431,436,453,454,529,659,801,802,805,853,856,857,859,860,862,863,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,889,892,893,894,895,896,897,898,899,902,927,930,933,961,962,969,979,980,988,989,995,996,1021,1022,1037,1129,1130,1131,1132,1133,1179,1180,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213],dev_clon:[40,41,853],dev_clone_arrai:853,dev_clone_it:853,dev_clone_nest:853,dev_dist:[40,41,853],dev_dist_arrai:853,dev_dist_it:853,dev_dist_nest:853,dev_from_str:[43,128,252,403,529,659,853],dev_mapp:853,dev_str:[40,41],dev_to_str:[128,252,403,529,659,853],dev_unifi:853,dev_unify_arrai:853,dev_unify_it:853,dev_unify_nest:853,dev_util:853,devclonedit:853,devcloneditem:853,devclonednest:853,devdistit:853,devdistitem:853,devdistnest:853,develop:[43,1173,1216,1219],deviat:[40,41,1129,1132,1136,1142,1171,1172,1204,1205],devic:[21,40,41,43,352,353,354,357,404,405,417,801,802,803,804,805,806,807,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,927,930,933,960,961,962,969,979,980,988,989,995,996,1021,1022,1037,1129,1130,1131,1132,1133,1173,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213],devmanag:[853,861],devmapp:[853,863],devmappermultiproc:853,diag:[833,836],diagon:[110,235,385,511,641,801,806,833,927,969],dict:[15,16,17,18,19,40,41,42,853,855,858,862,863,865,875,876,877,878,879,927,951,952,953,981,1069,1070,1071,1073,1117,1119,1120,1121,1124,1126,1179,1180],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,808,809,853,872,873,876,877,1045,1050,1073,1154,1163,1173,1216,1219],differenti:[1173,1216],dilat:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],dim:[40,41,833,836,927,988,1038,1039,1043,1073,1190,1201],dim_siz:[40,41,853,1073],dimens:[40,41,42,801,806,833,834,836,837,838,839,840,841,847,848,849,853,884,927,937,942,946,951,952,953,956,959,966,978,988,992,993,1003,1004,1007,1015,1017,1038,1042,1045,1048,1069,1070,1071,1072,1073,1129,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1155,1156,1157,1158,1159,1160,1161,1164,1167,1169,1170,1190,1191,1192,1193,1194,1195,1196,1197,1200,1201],dimension:[40,41,453,833,836,837,847,848,849,927,1003,1004],direct:1073,directli:[43,1117,1126,1216,1219],directori:[927,1000,1011],discord:43,discret:[1167,1169],discuss:43,disk:[40,41,1038,1040],distanc:[927,930],distribut:[40,41,853,872,876,877,878,879,1073,1129,1130,1131,1132,1133,1154,1162,1190,1198,1202,1203],distribute_nest:1073,distributedarrai:[40,41],distrubt:[1167,1169],dive:[1173,1216],divid:[40,41,927,1003,1005,1055],dividend:[1055,1062],divis:[927,958,965,998,1005,1006,1022,1024,1025,1029,1055,1062,1206,1207,1208],divisor:[1022,1024,1025,1029,1055,1062,1206,1207,1208],doc:1173,docstr:43,document:43,doe:[40,41,43,927,930,1003,1215],doesn:[1045,1050,1173],doing:43,domain:[812,813,814,817,818,823,825,829,830,831,1055,1056],don:[43,1173],done:43,door:1219,dot:[1045,1047,1154,1165,1166,1190,1201],down:1215,downscal:[927,940,941],drag:[1173,1219],draw:[1129,1130,1132,1133],drawn:[1129,1130,1131,1132,1133],drop:[1173,1219],dropout:[1154,1173,1190,1201],dropout_r:[1190,1201],ds_tune_step:853,dtype:[40,41,43,135,258,352,353,354,355,357,358,360,361,405,406,408,409,417,420,436,536,667,801,802,803,804,805,807,808,809,810,840,841,907,908,909,910,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,930,933,960,969,988,989,1021],dtype_bit:[135,258,405,536,667,903],dtype_from_str:[43,135,258,405,536,667,903],dtype_in:[405,414,415,416,903,909,914,915,916,917,918,919,926],dtype_to_str:[135,258,405,536,667,903],duplic:[40,41,43],dure:[40,41,43,851,852,927,1016,1022,1024,1025,1029,1069,1070,1071,1072,1202,1203,1206,1207,1208,1210],dynam:[43,405,410,851,852],each:[40,41,42,43,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,836,853,862,863,872,873,874,875,876,877,878,884,896,897,927,928,929,943,954,992,1003,1007,1010,1020,1022,1025,1027,1029,1030,1031,1038,1041,1055,1057,1062,1064,1065,1073,1117,1121,1129,1130,1136,1137,1154,1155,1156,1157,1158,1159,1160,1161,1162,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216],eager:1216,easi:1219,easili:1173,econom:1219,ecosystem:1173,edg:[927,939,943,1020],effect:[1022,1031],effective_grad:[1022,1031],effici:1219,einop:[40,41,927,951,952,953],einops_rearrang:[40,41,927],einops_reduc:[40,41,927],einops_repeat:[40,41,927],einstein:[40,41,1136,1137],einsum:[40,41,186,329,455,591,770,1136],either:[40,41,43,812,823,825,829,927,950,981,984,986,1069,1070,1071,1072,1073,1190,1201,1202,1203,1216],eleg:1073,element:[40,41,453,801,806,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,838,839,845,846,847,848,849,853,874,878,884,903,907,927,928,930,932,934,935,939,940,941,947,948,954,957,958,969,970,983,985,992,994,1003,1014,1019,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1073,1136,1137,1139,1141,1143,1146,1147,1148,1149,1150,1151,1152,1153,1154,1162,1190,1198],elementwis:[40,41],elementwise_affin:[1204,1205],elementwise_funct:[812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831],elemtn:[1129,1130],elif:1073,els:[43,927,936,950,955,1073],elsewher:[927,1019],emphas:1173,empti:[40,41,77,211,352,478,608,801,847,848,849,1045,1050,1073],enabl:[40,41,42,43,1173],encapsul:[808,810],encod:[927,959,1038,1040],end:[927,930,1173,1216],engag:43,ensur:43,entir:[40,41,847,848,849,853,897,1073,1173,1190,1199],entri:[40,41,927,979,980,1003,1004],entropi:[1167,1168,1169,1170],enumer:1073,environ:1173,eps:[358,808,809],epsilon:[1022,1024,1025,1029,1167,1168,1169,1170,1171,1172,1204,1205,1206,1207,1208],equal:[40,41,88,363,489,619,812,819,833,834,843,844,927,929,934,935,943,1003,1020,1055,1067,1129,1133],equality_matrix:[927,929],equat:[40,41,1136,1137],equival:[812,826,827,833,837,927,930,1055,1067],erf:[451,751,1055],error:[40,41,43,853,927,1004,1055,1063,1073,1146,1147,1202,1203,1206,1210],etc:[40,41,43,853,898,927,930,933,961,962,969,979,980,988,989,995,996,1021,1073,1129,1130,1131,1132,1133,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213,1219],euclidean:[833,837],euler:800,evalu:[40,41,812,823,824,825,828,847,848,849,927,984,1117,1118,1125],even:[43,1219],evenli:[40,41,927,930,979,980,1003],everi:[43,927,929,1219],exact:[40,41],exampl:[43,851,852,927,939,1007,1045,1050,1173,1215,1216,1219],example_input:[405,410,851,852],exc_tb:1073,exc_typ:1073,exc_val:1073,exce:[927,985],except:[40,41,44,47,847,848,849,927,930,936,942,950,1016,1073],excess_s:1073,excit:[1173,1216],exclud:[59,61,927,930,1129,1133],exclus:[40,41,405,412,425,437,439,927,947,976,1022,1028,1129,1131],execut:[43,927,1016,1216],execute_with_gradi:[166,306,437,571,731,1022,1173,1215],exist:[40,41,927,950,1073,1173,1206,1210,1219],exp:[751,1055],expand:[40,41,927,956,959],expand_dim:[40,41,258,667,927,1073],expect:[927,931],explain:[43,1216],explicitli:[43,1190,1199,1201,1202,1203,1216],expon:[927,1006],exponenti:[1055,1063,1064],expos:[927,933,944],express:[812,817,829,927,984],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1022,1026],eye:[1045,1047],fabian:1173,fabio:1173,factor:[833,836,853,862,895,896,897,1022,1024,1025,1029,1030,1073,1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197,1206,1207,1208,1209],fail:43,falck:1173,fall:[1202,1203,1206,1210],fallback_to_non_compil:[1202,1203,1206,1210],fals:[15,18,19,40,41,42,59,66,67,68,69,70,403,405,412,413,425,432,435,437,438,439,446,447,812,819,820,826,827,833,837,840,841,843,844,845,846,847,848,849,853,871,884,892,897,902,903,910,911,912,913,927,929,947,950,955,959,966,976,981,1001,1003,1017,1019,1022,1025,1026,1027,1028,1029,1030,1031,1045,1048,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1136,1138,1139,1140,1141,1142,1143,1144,1179,1180,1202,1203,1206,1207,1208,1209,1210,1211],fan_in:1181,fan_mod:1181,fan_out:1181,far:[1117,1118,1125,1215],faster:[851,852],favourit:[1173,1215],feasibl:1219,feat_dim:[1154,1165,1166],fed:[853,897,1073],feed:[853,897,1073],few:43,field:1219,file:[40,41,43,927,1000,1011,1202,1203],filepath:[40,41],fill:[40,41,801,803,804,805,807,927,960,989,1129,1131],fill_valu:[405,417,927,960],filter:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197,1219],filter_s:[1190,1191,1192],filter_shap:[1190,1193,1194,1195,1196,1197],find:[40,41,43,1219],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,217,218,358,359,484,485,614,615,808],finish:[1173,1219],finit:[812,819],first:[40,41,43,453,812,815,821,822,827,833,834,836,851,852,853,884,927,934,942,946,954,979,980,1007,1009,1022,1026,1069,1070,1071,1072,1073,1117,1118,1125,1129,1135,1136,1141,1143,1190,1201,1202,1203,1206,1210,1216,1219],firstlayersiren:[1173,1181],firstli:[1216,1219],fist:[853,897,1073],fit:[40,41,403,405,437,442,446,450,451,453,927,992,1038,1043],fix:43,fkt:1219,flag:[40,41,43,1022,1028],flat:[40,41,927,992,995],flat_list:[40,41],flatten:[40,41,833,837,840,841,927,959,992,1136,1138,1139,1140,1142,1144],flatten_key_chain:[40,41,1202,1203],flexibl:[1173,1216],flip:[40,41,115,240,390,516,646,838],float32:[43,405,420,903,907,915,916,927,930,933,969,989,1021],float_dtyp:[903,911,921],float_img_to_uint8_img:1038,floor:[258,405,667,927,958,1073],floormod:[258,405,667,927],fluid:1219,folder:[43,1173],follow:[40,41,43,808,810,833,837,853,897,927,972,973,974,1005,1006,1022,1025,1027,1029,1030,1031,1073,1117,1121,1126,1154,1165,1166,1173,1190,1200,1206,1210],followng:[808,809],fomaml_step:1069,forget:[1022,1024,1025,1029,1206,1207,1208],fork:[927,986,1173,1174],forkserv:[927,986,1073],form:[15,16,17,18,19,40,41,801,802,806,833,834,927,933,1022,1025,1027,1029,1030,1031,1117,1119,1126,1154],format:[40,41,43,853,871,903,907,909,913,927,930,933,969,989,1021,1073,1136,1137,1173,1215,1216],format_fn:[40,41],format_key_chain:[40,41],forward:[1202,1203,1206,1210,1215],found:[40,41,42],fourier:[927,959],fourier_encod:927,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,118,121,123,125,126,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,196,198,199,201,202,203,204,205,206,207,212,213,214,215,216,218,219,220,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,312,313,314,316,317,318,319,321,322,325,326,327,328,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,353,354,355,356,357,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,391,393,396,398,400,401,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,449,452,454,456,457,458,459,460,461,462,465,466,468,469,470,471,472,473,474,479,480,481,482,483,485,486,487,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,512,513,514,515,517,519,522,524,526,527,530,531,532,533,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,572,573,574,575,577,578,579,581,582,583,587,588,589,590,592,593,594,595,596,597,598,602,603,604,609,610,611,612,613,615,616,617,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,642,643,644,645,647,649,652,654,656,657,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,732,733,734,735,736,738,739,740,742,743,744,745,746,747,749,750,752,753,754,755,756,757,758,759,760,761,762,764,765,766,767,768,769,771,772,773,774,775,776,777,780,781,782,783,784,785,786,788,789,791,792,793,794,795,796,797,802,803,804,805,806,807,809,810,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,834,835,836,837,839,841,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1172,1173,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1218,1219],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1073,framewrk:[927,986],free:43,freed:43,freeli:43,frequenc:[927,959],from:[40,41,42,43,801,802,805,812,830,833,834,838,839,845,846,847,848,849,853,862,863,897,903,909,927,950,961,962,969,993,1004,1012,1019,1022,1025,1029,1038,1042,1045,1050,1069,1070,1071,1072,1073,1117,1119,1126,1129,1130,1131,1132,1133,1136,1141,1143,1154,1162,1165,1173,1179,1180,1190,1198,1201,1206,1210,1215,1216],from_cal:[1202,1203],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,135,258,405,536,667,808,809,927,1045,1050,1173],full_matric:[833,836],fulli:[43,1173,1190,1200,1201,1215],func:[40,41,405,410,437,438,851,852,853,897,927,938,1022,1026,1073],further:[43,1219],furthermor:1219,futur:1219,gain:1181,gamma:[1171,1172],gather:[40,41,135,258,405,536,667,927,962],gather_nd:[40,41,135,258,405,536,667,927],gauss:[1055,1063],gaussian:[1146,1147],geglu:[1173,1176],gelu:[339,464,779,1146,1173,1176],gener:[23,40,41,43,403,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,453,851,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1028,1129,1131,1133,1134,1173,1206,1210],geometr:[927,959],get:[40,41,43,808,809,810,853,862,863,871,886,887,892,896,899,902,903,913,914,927,931,963,964,965,991,1073,1173,1190,1199,1219],get_all_arrays_in_memori:927,get_all_arrays_on_dev:853,get_framework:59,get_initial_st:[1190,1199],get_min_bas:927,get_min_denomin:927,get_mod_kei:[1202,1203],get_num_dim:[405,667,927],get_referrers_recurs:927,getfullargspec:1073,gist:1173,give:[43,927,993,1216],given:[40,41,43,801,803,838,839,853,886,892,895,896,897,899,902,903,907,927,930,933,939,947,948,962,979,980,989,992,995,996,1003,1010,1015,1017,1021,1022,1024,1025,1027,1029,1030,1031,1045,1047,1051,1055,1056,1073,1117,1122,1123,1129,1132,1133,1135,1136,1139,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1179,1180,1219],global:[40,41,42,853,862,863,870,895,896,897,903,910,911,912,927,949,964,965,991,997,998,999,1005,1006,1022,1037,1073,1171,1172,1204,1205],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1173,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200],good:43,googl:1173,got:[43,1173],gpu0:43,gpu2:43,gpu:[853,888,891,1073],gpu_is_avail:[403,853,1073],grad:[1173,1206,1210,1215],gradient:[25,40,41,438,439,440,441,853,897,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1041,1069,1070,1071,1072,1173,1206,1207,1208,1209,1210,1211,1215,1219],gradient_descent_upd:[1022,1069,1070,1071,1072],gradient_imag:[169,311,442,576,737,1038],gradienttrack:[1022,1023],graph:[1022,1025,1027,1029,1030,1031,1202,1203],greater:[40,41,927,930,957,1004,1129,1133],green:[40,41,42,1217,1218],grid:[927,984],group:[1038,1043],guid:[43,1173,1174,1219],gym:1173,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1219,half:[927,930,1073,1129,1133],hand:1173,handl:[40,41,42,43,851,852,853,869,871,880,881,892,899,902,1022,1025,1027,1029,1030,1031,1073,1206,1207,1208,1209,1210,1211],happen:43,has:[40,41,43,833,835,840,841,927,1007,1045,1050,1055,1058],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,927],hasattr:1073,have:[40,41,43,801,803,804,805,806,807,808,809,812,813,814,815,816,817,818,819,820,821,822,823,825,826,827,829,830,831,833,834,836,837,838,839,840,841,843,844,847,848,849,927,942,946,951,952,953,954,960,1007,1022,1028,1036,1055,1062,1073,1173,1215,1216],haven:43,hdf5:[40,41,1202,1203],head:[1154,1165,1190,1201],head_dim:[1190,1201],height:[1038,1043],height_cutoff:[40,41],help:[43,59,358,403,404,853,865,866,867,868,903,1022,1173,1181,1183,1184,1186,1187,1189],here:[43,1173],hidden:[1154,1164,1190,1199],hierarch:[927,944],hierarchi:[40,41],high:[40,41,453,1129,1131,1133],higher:[833,836,1022,1025,1027,1029,1030,1031],highest:[1129,1131],highest_util:1073,highest_util_nod:1073,highli:1173,highlight:1219,hint:43,hkt:1219,hold:[903,907,927,930,933,995,996],host:1173,hot:[927,988],how:[1173,1190,1201,1202,1203,1216,1219],howev:[43,1216],http:1219,hyperbol:[812,813,814,818,831,1055,1060,1061,1066,1068,1146,1153],hypothet:[43,1219],icon:1173,idea:1173,ident:[40,41,43,135,258,405,536,667,927],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[800,808,809,812,830],if_exist:[40,41],ignor:[40,41,1206,1210],ignore_key_error:[40,41],ignore_miss:[1206,1210],ignore_non:[40,41],iii:43,iinfo:[83,217,358,484,614,808],imag:[27,443,444,445,927,978,1039,1040,1041,1042,1043,1044,1154,1155,1156,1157,1158,1160,1161,1173,1219],image_dim:[1038,1042],imkkhk:1219,immedi:[1173,1216,1219],implement:[43,812,813,814,817,818,823,824,825,829,831,843,844,1173,1216,1219],in_featur:[1154,1163],inadvert:43,includ:[40,41,43,801,802,833,837,847,848,849,927,930,968,1005,1006,1018,1117,1118,1129,1133,1190,1200,1201,1204,1205,1215],include_deriv:[1117,1119,1126],include_empti:[40,41],include_inf:[40,41,927,968,1018],include_nest:[1117,1118],include_self:[40,41],inclus:[43,1129,1131],incom:[1154,1163],increas:[853,875,879,885,927,943,956,1020,1073,1117,1126],increasingli:1219,increment:[927,973,1073],inde:1173,indent:[40,41,42],independ:[1129,1130],index:[40,41,405,453,840,841,843,844,927,932,961,962,984,1004,1007,1117,1120,1122,1123,1124,1127],index_nest:1117,indic:[40,41,405,418,419,429,430,431,833,837,840,841,843,844,927,932,961,962,970,988,995,996,1117,1118,1120,1122,1123,1124,1125,1127,1128,1129,1130,1146,1151,1154,1155,1156,1157,1158,1159,1160,1161,1171,1172,1190,1191,1192,1193,1194,1195,1196,1197,1202,1203],indices_wher:[135,258,405,667,927],indistinguish:[812,830],inevit:1219,inf:[40,41,833,837,927,968,977,1018,1055,1058],infer:[801,802,805,845,846,851,852,927,966,969,993,1001,1038,1042,1045,1050,1216,1219],infin:[812,813,814,816,817,818,819,823,825,829,830,831,833,837,847,848,849,927,977],infinit:[812,830],inform:[808,809,810,1022,1033],init_c:[1154,1164],init_h:[1154,1164],init_on_first_step:[1206,1210],initi:[40,41,42,43,59,358,403,404,853,865,866,867,868,903,1022,1073,1154,1164,1173,1183,1184,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1206,1210],initialz:[1202,1203],inner:[1069,1070,1071,1072],inner_batch_fn:[1069,1070,1071],inner_batch_shap:[1154,1163],inner_cost_fn:[1069,1070,1071],inner_grad_step:[1069,1070,1071,1072],inner_learning_r:[1069,1070,1071,1072],inner_optimization_step:[1069,1070,1071,1072],inner_v:[1069,1070,1071],innermost:[801,806,833,834],inp:1073,inplac:[40,41,927,936,971,975,1008,1022,1025,1027,1029,1030,1031,1179,1180,1206,1207,1208,1209,1210,1211],inplace_arrays_support:[405,927],inplace_decr:[135,258,405,536,667,927],inplace_incr:[135,258,405,536,667,927],inplace_oper:[0,11,12],inplace_upd:[40,41,135,258,405,536,667,927,1179,1180],inplace_variables_support:[405,927],input:[15,18,19,40,41,42,43,801,802,805,806,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,836,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,862,863,870,871,872,875,876,879,885,897,898,903,907,908,910,911,912,913,914,918,919,927,928,929,932,934,935,936,937,939,940,941,942,943,945,947,948,950,951,952,953,954,955,956,957,958,959,966,968,969,970,972,973,974,976,977,978,982,983,984,985,992,994,1001,1002,1004,1007,1008,1009,1010,1012,1013,1014,1015,1017,1018,1020,1022,1026,1028,1033,1037,1038,1039,1040,1041,1042,1044,1045,1048,1050,1052,1053,1054,1055,1058,1060,1061,1062,1066,1067,1068,1069,1070,1071,1072,1073,1129,1130,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1172,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205,1216],input_ax:[853,897,1073],input_channel:[1190,1191,1192,1193,1194,1195,1196,1199,1200],input_queu:1073,inputs_split:1073,insert:[840,841,927,956],insid:43,inspect:1073,inspir:1219,instal:1173,instanc:[15,16,17,18,19,40,41,43,453,853,862,1073,1179,1180,1212,1213],instead:[40,41,43,453,1136,1138,1139,1140,1141,1142,1143,1144,1219],int32:43,int64:[903,907,927,930,933,969,989,1021],int_dtyp:[903,912,922],integ:[40,41,453,808,810,812,815,816,833,837,847,848,849,903,919,927,930,957,994,1003,1129,1131,1134],integr:1173,intend:43,inter:1173,interact:1173,interchang:[40,41,927,1009],interest:1173,interfac:[927,933,1216],intermedi:[40,41],intern:[40,41,853,1022,1036,1073,1117,1118,1125,1126,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1212,1213],interpol:[927,978],interpret:[801,802],intersect:[1055,1056],interv:[40,41,847,848,849,927,930,939,979,980,1055,1057,1129,1133],introduc:1219,inv:[741,1045,1219],invalid:[847,848,849],invalid_dtyp:903,invers:[812,813,814,1045,1047,1049,1055,1056,1057,1058,1060,1219],invert:[1045,1047,1049],invest:1219,investig:43,invoc:[851,852],irrespect:1173,is_al:1073,is_arrai:[135,258,405,536,667,927,1073],is_float_dtyp:903,is_int_dtyp:903,is_mean:1073,is_sum:1073,is_vari:[166,306,437,571,731,1022],isfinit:[88,222,363,489,619,812],isinf:[258,536,667,927],isinst:1073,isnan:[88,222,363,489,619,812],isnumer:1073,issu:[1173,1174],issue_numb:43,item:[15,19,40,41,853,862,863,865,872,874,876,878,884,903,910,927,944,967,1005,1006,1073,1117,1121,1122,1123,1126,1127,1128,1173,1202,1203,1215],iter:[15,16,17,18,19,40,41,42,851,852,853,856,857,859,860,862,863,866,867,874,876,877,878,879,884,897,927,929,937,942,943,969,984,989,992,993,996,1001,1003,1007,1010,1015,1020,1073,1117,1118,1119,1121,1125,1126],iterbal:[853,874,878,884,1073],its:[453,853,897,927,969,993,1009,1015,1073,1173],itself:[1117,1126],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1183,1184,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1217,1218],ivy_backend:[40,41],ivy_bay:1219,ivy_test:43,ivyfcmodel:1215,ivyh:[40,41,42],ivymodul:[197,787],jame:1173,jax:[43,1022,1028,1173,1219],jax_concat:1173,jnp:1173,join:[40,41,927,942,1007,1073],journal:1173,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1173,1190,1199,1219],kaimingnorm:[1181,1185],kalman:1219,kalman_filt:1219,kalman_filter_step:1219,kalman_filter_upd:1219,keep:[40,41,853,898,927,1017,1073,1173,1174,1219],keep_inner_v:[1069,1070,1071],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1069,1070,1071],keepdim:[40,41,405,435,446,447,833,837,840,841,845,846,847,848,849,927,1017,1045,1048,1136,1138,1139,1140,1141,1142,1143,1144],kei:[15,16,17,40,41,42,43,853,865,927,944,1069,1070,1071,1073,1117,1120,1124,1154,1165,1166,1173,1179,1180,1190,1201,1206,1210],kept:[40,41,42,1069,1070,1071],kera:1219,kernel:[1154,1164],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,853,862,863,875,879,885,927,931,951,952,953,981,1073,1117,1121,1202,1203],keyword_color_dict:[40,41,42],kind:[808,809,810,1219],kwarg:[15,16,17,40,41,42,59,63,853,862,875,879,885,927,981,1073,1179,1180,1202,1203],kwarg_stateful_idx:[1202,1203],kwargs_clon:1073,kwargs_dist:1073,kwargs_uni:1073,label:[43,1167,1168,1169,1170],lamb:[1022,1029,1173,1206],lamb_upd:1022,lambda:[1073,1206,1209,1211,1215],lar:[1022,1029,1030,1173,1206],larger:[808,809,927,939],largest:[40,41,808,809,810,927,957],lars_upd:1022,last:[40,41,833,834,836,838,839,843,844,847,848,849,927,930,946,978,1003,1007,1045,1048,1136,1141,1143,1146,1151,1154,1164,1190,1200],later:[40,41,927,938],latest:[1190,1199],layer:[1022,1025,1027,1029,1031,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1172,1173,1181,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213,1219],layer_norm:1171,layernorm:[1173,1204],layerwis:[1022,1030,1206,1209],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1117,1118,1125],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1146,1147,1148],leaky_relu:[779,1146],learn:[845,846,1022,1025,1027,1029,1030,1031,1045,1050,1069,1070,1071,1072,1129,1135,1173,1206,1207,1208,1209,1210,1211,1216,1219],learnabl:[1171,1172,1204,1205],least:43,leav:[15,18,19,40,41,1117,1118,1119,1125,1126],left:[40,41,43,840,841,1045,1048,1136,1138,1139,1140,1141,1142,1143,1144,1173],leftmost:[40,41],len:1073,length:[40,41,42,927,930,993,1004,1015],lenton2021ivi:1173,lenton:1173,less:[40,41,43,88,222,363,489,619,812,813,816,823,825,830,833,837,1073,1129,1133],less_equ:[88,363,489,619,812],less_util_node_str:1073,let:[1216,1219],level:1173,librari:[812,826,827,1173,1215,1219],lightweight:1173,like:[43,1022,1028,1129,1133,1173,1215,1216,1219],likewis:43,limit:[40,41,42,43,808,809,810,927,939,940,941],linalg:[29,1046,1047,1048,1049,1050,1051,1173],line:43,linear0:[1173,1215],linear1:1173,linear2:1215,linear:[927,959,978,1045,1146,1147,1148,1149,1154,1162,1173,1190,1191,1192,1193,1194,1195,1196,1197,1215],linear_algebra:[446,447,448,449,833,834,835,836,837],linear_resampl:[135,258,405,536,667,927],linearli:[927,959],link:[43,1173],linspac:[135,258,405,536,667,927,930],list:[15,18,19,40,41,352,353,354,357,801,802,803,804,807,838,839,847,848,849,853,862,863,872,873,875,876,877,879,882,883,897,927,930,933,935,984,1002,1003,1012,1017,1069,1070,1071,1073,1117,1118,1119,1121,1125,1126,1154,1155,1156,1157,1158,1159,1160,1161,1173,1174,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197],list_join:[40,41,42],list_stack:[40,41],liter:[833,837],littl:1216,load:[40,41],loaded_kwarg:1073,loader:1173,local:43,local_set:[927,967],locat:[43,927,977,1129,1130],log10:[88,363,489,619,812],log1p:[88,363,489,619,812],log2:[88,363,489,619,812],log:[751,812,824,833,835,927,980,1055,1073,1167,1168,1169,1170],logarithm:[812,823,824,825,833,835,1055,1065],logdet:[833,835],logic:[31,812,826,827,847,848,849,1053,1054,1173],logical_and:[320,748,1052],logical_not:[88,222,363,489,619,812],logical_or:[88,320,363,489,619,748,812,1052],logit:[1167,1170],logspac:[135,258,405,536,667,927],look:[43,1216,1219],loop:[1069,1070,1071,1072],loss:[1168,1169,1170,1173,1215],loss_fn:[1173,1215],lot:1216,low:[40,41,453,1129,1131,1133],lower:[40,41,43,801,806,927,983,1129,1133],lower_depth:[1202,1203],lowest:[15,18,19,40,41,1117,1126,1129,1131],lstm:[1154,1164,1173,1190],lstm_updat:[43,1154],machin:[808,809,810,845,846,1045,1050,1129,1135,1173,1216,1219],made:43,mai:[812,822,826,827,843,844,927,930,950,954,1173,1216,1219],main:[801,806,833,834,927,969,1173],mainli:1173,maintain:[43,843,844],make:[43,453,853,1073,1173,1216],maml:[1069,1070,1071],maml_step:1069,manag:[853,1073],manhattan:[833,837],mani:[40,41,43,927,1003,1173],manipulation_funct:[838,839],manner:[15,18,19,40,41,43,1117,1126],manual:[1117,1118,1125,1219],map:[40,41,42,853,862,927,977,1073,1117,1122,1123,1126,1190,1201,1215],map_cont:[40,41],map_nest_at_index:1117,map_nest_at_indic:1117,map_sequ:[40,41],mapper:[853,862,863,1073],mark:43,mask:[1154,1165,1166],master:43,match:[40,41,927,981],match_kwarg:927,math:[33,452,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1073,1173],mathbb:[1045,1051],mathbf:[1045,1051],mathemat:[800,833,837],matmul:[43,258,405,536,667,927,1219],matplotlib:1216,matric:[801,806,833,834,1154,1163],matrix:[40,41,801,806,833,834,927,929,940,982,1045,1046,1047,1048,1049,1050,1051,1154,1163,1190,1200],matrix_norm:[40,41,173,315,446,580,741,1045],matter:1173,max:[40,41,358,808,809,810,927,940,941,952,983,995,996,1073,1136,1138,1206,1208],max_batch_s:[40,41],max_chunk_s:[853,897,1073],max_depth:[40,41,853,857,860,867,875,879,885,927,967,1073,1117,1126],max_dev_dim_step_ratio:853,max_freq:[927,959],max_length:[40,41],max_node_dim_step_ratio:1073,max_norm:[40,41,927,940,941],max_split_factor_step_s:[853,1073],max_trust_ratio:[1022,1029,1206,1208],maxim:[1173,1216,1219],maximis:1173,maximum:[40,41,42,667,840,841,853,875,879,885,897,927,939,940,941,959,1022,1029,1073,1117,1126,1136,1138],mayb:[15,18,19],mdi:1073,mean:[40,41,453,853,882,883,884,885,897,927,952,1069,1070,1071,1072,1073,1117,1121,1129,1132,1136,1139,1142,1144,1181,1215,1219],measur:[1154,1165,1190,1201],mech:1173,mechan:[1173,1219],medic:1219,member:43,memori:[853,869,892,897,899,902,1073,1154,1164,1173],mention:43,merg:43,merge_with_upstream:43,meshgrid:[258,405,667,927],messag:[1217,1218],meta:[35,1070,1071,1072,1173],method:[40,41,42,43,453,927,933,944,984,995,996,1022,1029,1030,1073,1117,1118,1125,1126,1173,1190,1201,1202,1203,1216],might:[927,950,1219],min:[40,41,122,358,397,523,653,808,809,810,833,837,845,927,952,985,995,996,1005,1045,1050,1073,1136,1140],min_bas:[927,1006],min_denomin:[927,1005],min_dev_dim_s:853,min_node_dim_s:1073,min_sf_tune_step:[853,1073],min_unit_dev_tune_step:853,min_unit_node_tune_step:1073,mind:1173,mini:[1171,1172,1204,1205],minimum:[40,41,667,845,846,853,903,907,927,930,932,933,939,964,965,997,998,1005,1006,1073,1136,1140],miss:[1206,1210],ml_framework:[927,930,1045,1050],mod:[927,958],mod_depth:[1202,1203],mod_height:[1202,1203],mod_with_top_mod_key_chain:[1202,1203],mode:[40,41,446,448,833,836,851,852,853,882,883,884,885,897,1045,1050,1073,1216],model:[1173,1215],modul:[40,41,42,59,927,986,1073,1173,1174,1176,1177,1178,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205,1212,1213,1219],moment:[1022,1024,1025,1029,1206,1207,1208],more:[43,838,839,927,1007,1073,1173,1216,1219],more_util_node_str:1073,most:[40,41,1045,1050,1173,1219],move:[40,41,43,853,898,1073],much:[43,1173,1219],multi:[453,927,986,1154,1165,1190,1201],multi_head_attent:1154,multi_index_nest:1117,multi_map:[40,41],multi_nod:1073,multidev:[853,864,865,866,885],multidevcontain:[40,41],multidevic:[853,862],multidevit:[853,856,859,862,863,867],multidevitem:[853,855,858],multidevnest:[853,857,860],multiheadattent:[1173,1190],multinod:[1073,1077],multinodecontain:1073,multinodeit:1073,multinodeitem:1073,multinodenest:1073,multinomi:[179,324,453,586,763,1129],multipl:[40,41,847,848,849,927,981,1003,1045,1047,1136,1138,1139,1140,1141,1142,1144,1171,1172,1190,1200,1216],multipli:[40,41,927,947,1136,1141],multiprocess:[40,41,42,405,667,853,862,927,1073],must:[40,41,42,43,801,803,804,805,806,807,812,813,814,815,816,817,818,819,821,822,823,825,826,827,829,830,831,833,834,837,838,839,843,844,845,846,847,848,849,853,882,883,884,885,897,927,930,942,944,946,954,983,985,996,1007,1055,1059,1062,1073,1129,1134,1206,1210],mutabl:[1117,1119,1126],mutlidevic:[853,862],mutlinod:1073,mw_tm1:[1022,1025,1029],mx_concat:1173,mxn:[801,806,833,834],mxnet:[1173,1219],my_func:43,mymodel:1173,name:[43,851,852,1215],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1216],nan:[40,41,43,800,812,813,814,816,817,818,819,820,823,825,829,830,847,848,849,927,968,1018],nativ:[15,17,18,19,40,41,43,853,869,871,880,881,892,899,902,903,908,915,916,1073,1173,1174,1179,1180],native_modul:[1179,1180],native_module_class:[1179,1180],nativearrai:[15,18,19,43,801,802,805,806,808,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,835,836,837,838,839,840,841,843,844,845,846,847,848,849,853,871,897,898,903,907,913,918,919,927,928,929,930,932,933,934,935,937,939,940,941,942,943,945,946,947,948,951,952,953,954,956,957,958,959,961,962,966,968,969,970,977,978,979,980,982,983,984,985,988,989,992,993,994,995,996,1001,1003,1004,1007,1009,1010,1012,1013,1014,1015,1017,1018,1019,1020,1021,1073,1117,1119,1126],natur:[812,824,833,835,1055,1065,1219],ncdhw:[1154,1159,1160,1190,1195,1196],nchw:[1154,1157,1158,1161,1190,1193,1194,1197],ncw:[1154,1155,1156,1190,1191,1192],ndarrai:[352,353,354,355,356,357,358,360,361,453,801,802,927,1013],ndhwc:[1154,1159,1160,1190,1195,1196],nearest:[927,994],need:[43,927,940,941,1154,1156,1158,1160,1173,1190,1192,1194,1196,1219],neg:[40,41,88,222,363,489,619,812,819,833,837,838,839,847,848,849,1136,1141,1143,1146,1148],negative_slop:1181,neither:1073,nest:[15,16,17,18,19,40,41,42,853,875,879,885,927,933,1012,1069,1070,1071,1073,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1202,1203,1206,1207,1208,1209,1210,1211],nested_indices_wher:1117,nested_map:[1073,1117],network:[1154,1163,1173,1174,1176,1190,1202,1203,1219],neural:[1154,1173,1176,1190,1215],never:43,new_node_percent_mem:1073,new_node_util:1073,new_node_utils_kei:1073,new_std:[1171,1172,1204,1205],newli:[43,851,852,927,937,938],newlin:[40,41,42],newshap:[927,937,993],next:[808,809,1073,1202,1203,1206,1207,1208,1209,1210,1211],nhwc:[1154,1157,1158,1161,1190,1193,1194,1197],node:[40,41,1117,1118,1125],node_clon:1073,node_dist:1073,node_dist_arrai:1073,node_dist_it:1073,node_in:1073,node_mapp:1073,node_str:1073,node_to_str:1073,node_util:1073,nodedistit:1073,nodedistitem:1073,nodedistnest:1073,nodemanag:[1073,1084],nodemapp:1073,nodemappermultiproc:1073,noinspect:[854,904,905,906,1023,1073],non:[40,41,812,826,827,833,837,847,848,849,851,852,903,917,1202,1203,1206,1210,1216],none:[40,41,42,43,59,61,64,352,353,354,355,357,403,405,406,408,410,417,418,419,420,427,428,429,430,431,432,433,434,436,446,447,453,454,801,802,803,804,805,807,808,809,810,833,837,838,839,840,841,845,846,847,848,849,851,852,853,862,863,869,870,895,896,897,898,903,910,911,912,927,930,933,949,950,955,960,961,962,967,969,971,972,973,974,975,979,980,986,988,989,992,995,996,997,998,1003,1004,1005,1006,1015,1016,1021,1022,1025,1027,1029,1030,1031,1037,1038,1042,1045,1048,1050,1069,1070,1071,1072,1073,1117,1118,1121,1125,1126,1129,1130,1131,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1154,1156,1158,1160,1163,1164,1165,1166,1171,1172,1179,1180,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],norm:[40,41,833,837,927,940,941,1045,1048,1172,1173,1205,1206,1208],normal:[1129,1132,1171,1172,1204,1205],normalized_idx:[1171,1172],normalized_shap:[1204,1205],notat:[40,41,1136,1137],note:[43,1045,1050],noth:[40,41,1216],notimplementederror:1073,now:[40,41,43,853,898,927,928,1073,1173,1190,1201,1202,1203,1215,1216,1219],np_concat:1173,np_finfo:358,ns_tune_step:1073,num:[405,427,428,927,979,980],num_arrai:[40,41],num_arrays_in_memori:927,num_arrays_on_dev:853,num_band:[927,959],num_channel:[1190,1197],num_chunk:1073,num_chunks_floor:1073,num_class:[1129,1130],num_cpu_cor:853,num_gpu:[128,403,853,1073],num_head:[1154,1165,1190,1201],num_kei:[1154,1165,1166],num_lay:[1190,1199],num_or_size_split:[40,41,405,432,927,1003],num_output:1073,num_queri:[1154,1165,1166],num_sampl:[405,426,453,454,927,978,1038,1039,1129,1130],num_task:[1069,1070,1071,1072],number:[40,41,42,800,808,809,810,812,816,833,835,836,847,848,849,851,852,853,889,890,891,903,914,918,919,927,930,939,943,956,959,966,969,978,979,980,983,987,992,1003,1010,1014,1018,1020,1069,1070,1071,1072,1073,1129,1130,1134,1136,1138,1139,1140,1142,1144,1154,1165,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1216,1219],numer:[43,812,816,819,820,821,826,827,828,927,964,965,997,998,1005,1006,1055,1062,1181],numhead:[1154,1165],numpi:[40,41,43,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,833,836,927,1013,1045,1050,1136,1137,1173,1215,1216,1219],nwc:[1154,1155,1156,1190,1191,1192],obj:[40,41],object:[40,41,42,59,358,808,809,853,903,907,927,930,933,1022,1117,1120,1122,1123,1124,1127,1128,1129,1135,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1202,1203],object_in:[405,408,927,933],observ:1073,obvious:43,occupi:[808,809,810,927,995,996],off:[833,834,927,930],offer:1173,offset:[833,834,1171,1172],often:1216,old:[40,41],on_init:[1190,1201,1202,1203],onc:[43,853,897,1073,1129,1130,1173],one:[40,41,43,833,837,838,839,840,841,853,882,883,884,885,897,903,909,927,969,981,988,995,996,1004,1007,1045,1048,1073,1136,1137,1138,1139,1140,1141,1142,1143,1144,1173,1216,1219],one_hot:[135,405,536,667,927],onearrai:[927,956],ones:[40,41,77,211,352,478,608,801,805,927,969,988,1173],ones_lik:[77,211,352,478,608,801],ongo:43,onli:[40,41,43,453,812,826,827,838,839,853,1045,1050,1073,1117,1118,1119,1125,1206,1207,1208,1209,1210,1211,1215,1216],onlin:[43,1173],onto:[853,882,883,898,1073,1117,1121,1126],oom:[853,1073],open:[927,930,1129,1133,1173,1219],opencv:1216,oper:[40,41,43,927,936,951,952,953,979,980,1008,1022,1025,1027,1029,1030,1031,1052,1053,1054,1154,1155,1156,1157,1158,1159,1160,1161,1163],operand:[40,41,812,813,814,816,817,818,823,825,829,830,1136,1137],oppos:[927,959],optim:[853,1022,1025,1027,1029,1030,1031,1069,1070,1071,1072,1073,1173,1207,1208,1209,1211,1215,1219],optimizer_upd:1022,option:[15,18,19,40,41,42,43,352,353,354,355,357,801,802,803,804,805,807,833,837,838,839,840,841,845,846,847,848,849,851,852,853,862,863,871,875,876,877,878,879,882,883,884,885,892,895,896,897,898,902,903,908,913,917,926,927,929,930,932,933,940,941,942,947,949,950,959,960,961,962,966,968,969,976,978,979,980,981,984,986,988,989,992,995,996,999,1001,1003,1004,1005,1006,1007,1015,1017,1018,1021,1022,1025,1027,1028,1029,1030,1031,1033,1038,1042,1045,1048,1050,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1151,1154,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216],ord:[833,836,837],order:[40,41,42,43,833,837,838,839,843,844,1022,1025,1027,1029,1030,1031,1045,1048,1069,1070,1071,1212,1213],ordered_node_util_kei:1073,org:1219,organ:43,origin:[40,41,42,927,993,1021,1045,1048],other:[40,41,43,851,852,927,929,930,969,1022,1026,1129,1133,1173,1215,1216,1219],otherwis:[15,16,17,18,19,40,41,812,819,820,833,837,840,841,847,848,849,853,870,903,910,911,912,927,936,1015,1016,1019,1022,1028,1033,1037,1069,1070,1071,1073,1136,1138,1139,1140,1142,1144],our:[43,1173,1219],out:[43,453,801,804,806,807,808,809,810,812,813,814,815,816,817,818,819,820,821,823,824,825,826,827,829,830,833,834,835,837,838,839,840,841,843,844,847,848,849,927,930,1055,1058,1154,1162,1164,1173,1190,1198],out_feat_dim:[1154,1165],out_featur:[1154,1162,1163],out_i:[812,819,820],outdat:1219,outer:[1069,1070,1071,1072],outer_batch_fn:[1069,1070,1071],outer_batch_shap:[1154,1163],outer_cost_fn:[1069,1070,1071],outer_v:[1069,1070,1071],outlin:1216,output:[40,41,43,801,803,804,805,807,838,839,853,862,863,897,927,930,938,960,969,992,1010,1022,1026,1055,1059,1073,1129,1131,1132,1133,1154,1156,1158,1160,1162,1164,1165,1166,1173,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201],output_ax:[853,897,1073],output_axi:1073,output_channel:[1190,1191,1192,1193,1194,1195,1196,1199,1200],output_queu:1073,output_shap:[1154,1156,1158,1160,1190,1192,1194,1196],outsid:[927,939],over:[40,41,833,837,847,848,849,1045,1048,1129,1133,1136,1138,1139,1140,1142,1144,1171,1172,1204,1205],overal:1216,overflow:[927,930],overhead:1216,overrid:[927,988,1021],overriden:[1206,1210],overwrit:[40,41,853,897,1073],overwrite_at_key_chain:[40,41],own:[1173,1216,1219],packag:[43,1216],pad:[927,943,959,1020,1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],pad_width:[405,927,943,1020],page:1173,pair:[1154,1166],parallel:[853,862,863,1073],parallelis:[853,862,863,1073],param:[40,41,42,405,418,419,801,803,805,840,841,845,846,853,897,927,928,961,962,988,989,1073,1202,1203,1215],paramet:[15,16,17,18,19,40,41,42,43,801,803,805,812,822,828,831,833,834,836,845,846,851,852,853,862,863,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,892,895,896,897,898,899,902,903,907,908,909,913,914,915,916,917,918,919,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,945,946,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,966,968,969,970,972,973,974,976,977,978,979,980,981,982,983,984,985,986,989,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1033,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215],parameter:[1129,1132,1133],pardo:1173,pars:[927,944],part:[801,806,1022,1025,1027,1029,1030,1031,1055,1058,1173,1202,1203,1216],partial:[40,41,43,1202,1203],particl:1219,particular:[43,1219],pass:[40,41,42,43,853,862,897,903,908,927,938,1022,1036,1069,1070,1071,1073,1179,1180,1202,1203,1206,1210,1212,1213],pattern:[40,41,927,951,952,953],peopl:43,per:[853,1073,1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],percent_used_mem_on_dev:853,percent_used_mem_on_nod:1073,percentag:[853,892,1073],perf_count:1073,perform:[40,41,43,847,848,849,853,927,932,947,951,952,953,972,973,974,978,979,980,1022,1025,1027,1029,1030,1031,1038,1039,1069,1070,1071,1072,1073,1117,1122,1123,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1162,1164],period:43,permissable_step:1073,permit:43,permut:[453,927,1009,1015],perpendicular:[927,946],person:[43,1173],physci:1219,pickl:[40,41,1073],pickle_filepath:[40,41],pinv:[315,741,1045],pip:1173,pipelin:1215,pkk:1219,pkkm1:1219,pkm1km1:1219,place:[40,41,43,801,802,803,804,805,807,853,898,927,956,960,972,973,974,1073,1206,1207,1208,1209,1210,1211],placehold:[43,1117,1126],pleas:[43,453,1045,1050],point:[43,800,801,803,804,807,808,809,812,813,814,816,817,818,823,825,829,830,831,833,837,903,918,927,930,1055,1062],popul:[40,41,1129,1130],popular:1219,population_s:[453,454,1129,1130],portabl:[1173,1174],posit:[15,16,17,808,809,812,819,847,848,849,853,875,879,885,927,928,930,956,959,1073,1129,1134,1179,1180],possibi:[40,41],possibl:[43,927,981,1012,1038,1043,1219],post:[1171,1172],post_shap:[40,41],power:[927,964,997,1006,1181],practic:1173,pre:[853,1073,1173],pre_shap:[40,41],precis:[808,809,812,830],pred:[1167,1168,1169,1170],predict:[1167,1168,1169,1170,1219],preprint:1173,present:[40,41],preserv:[40,41,42,838,839,1022,1033],preserve_typ:[40,41,437,440,1022,1033],press:1173,prevent:[43,1022,1024,1025,1029,1073,1206,1207,1208],prevet:43,previou:[1022,1025,1029],previous:[927,938],prime:1173,print:[40,41,42,853,893,927,990,1173,1215],print_all_arrays_in_memori:927,print_all_arrays_on_dev:853,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1206,1210],prob:[453,454,1129,1130,1154,1162,1190,1198],probabl:[1129,1130,1154,1162,1190,1198],problem:[43,1219],process:[43,853,862,863,892,902,927,986,1073],process_specif:[853,892,902,1073],prod:[40,41,927,952],produc:[853,862,863,1073],product:[40,41,927,946,947,982,1136,1137,1154,1165,1166,1190,1201],profil:[128,252,403,529,659,853,1073],progress:43,project:[1173,1215,1216,1219],promot:[812,813,814,815,817,818,823,825,829,830,833,837,1055,1062],prompt:1173,properti:[40,41,358,853,865,1073,1202,1203,1206,1207,1208,1209,1211],provid:[40,41,43,838,839,840,841,847,848,849,851,852,853,870,903,910,911,912,917,926,927,950,988,996,1021,1022,1025,1027,1029,1030,1031,1037,1073,1173,1190,1199,1206,1207,1208,1209,1210,1211,1216],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1045,1049],pull:[1173,1174],pure:[40,41,1173,1219],purpos:[43,1219],put:1073,pybroadexcept:1073,pyprotectedmemb:1073,pyshadowingnam:[854,904,905,906,1023,1073],python:[40,41,853,892,902,927,930,1073,1173],pytorch:[1022,1025,1027,1029,1030,1031,1045,1050,1173,1206,1207,1208,1209,1210,1211,1215,1216,1219],pyunresolvedrefer:1073,quadrant:[1055,1059],qualiti:43,queri:[40,41,853,886,896,1073,1154,1165,1166,1190,1201],query_dim:[1190,1201],query_kei:[40,41],queue:[40,41,42,853,862,863,927,991,999,1073],queue_class:[853,862,863,1073],queue_load_s:[40,41,42],queue_timeout:[40,41,42,927,1073],quick:[453,1173],quickli:[43,1215],radian:[812,817,829,1055,1056,1057,1059,1067],rai:[1055,1056],rais:[40,41,847,848,849,927,936,964,997,1004,1006,1016,1073,1202,1203,1206,1210],ram:[853,892,899,902,1073],randint:[179,324,453,586,763,1129],random:[37,40,41,454,1130,1131,1132,1133,1134,1135,1173],random_crop:1038,random_norm:[179,324,453,586,763,1129],random_uniform:[179,324,453,586,763,1129],randomli:[453,1038,1042,1154,1162,1190,1198],rang:[453,927,930,979,980,1055,1059,1073,1173,1215,1219],rank:[833,837,847,848,849,927,943,1017,1020],rate:[1022,1025,1027,1029,1030,1031,1069,1070,1071,1072,1190,1201,1206,1207,1208,1209,1210,1211],rather:[40,41,43,853,897,927,930,976,1022,1028,1073],ratio:[853,1022,1029,1038,1043,1073,1206,1208],raw:[40,41,1045,1050],raw_delta:1073,reach:[43,853,875,879,885,1073,1117,1126],read:[40,41],readi:[1073,1215],real:[1055,1056,1058],realiti:1216,rearrang:[40,41,927,951,953],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1069,1071],receiv:[43,853,862,863,927,931,981,1073,1190,1200],receivess:[853,1073],receivng:[1069,1072],recev:[1069,1070,1071],recognit:1219,recommend:[812,826,827,1173],rectifi:[1146,1148,1149],recurr:[1154,1164],recurrent_bia:[1154,1164],recurrent_kernel:[1154,1164],recurs:[40,41,1117,1118,1119,1125,1126],reduc:[40,41,840,841,847,848,849,853,897,927,952,1045,1050,1073,1136,1138,1139,1140,1141,1142,1143,1144],reduce_max:[40,41,186,329,455,591,770,1136],reduce_mean:[40,41,186,329,455,591,770,1136,1173,1215],reduce_min:[40,41,186,329,455,591,770,1136],reduce_prod:[40,41,186,329,455,591,770,1136],reduce_std:[40,41,329,1136],reduce_sum:[40,41,186,329,455,591,770,1073,1136],reduce_var:[40,41,186,329,455,591,770,1136],reduct:[39,40,41,405,430,431,847,848,849,927,952,995,996,1137,1138,1139,1140,1141,1142,1143,1144,1173],refactor:43,refer:[43,812,824,847,848,849,1022,1024,1025,1045,1051,1190,1200,1219],reflect:43,reflected_oper:[0,13,14],regard:[853,1073],regardless:[40,41,851,852],register_paramet:1215,reimplement:1219,rel:[833,834,838,839,843,844,1022,1025,1027,1029,1030,1031],rel_slice_obj:1073,relat:43,relev:[1206,1207,1208,1209,1210,1211],relu:[779,1146,1147,1148,1173,1215],remain:[43,927,993,1117,1121],remaind:[40,41,927,958,1003],remov:[40,41,43,833,834,840,841,927,1004,1069,1070,1071],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,838,839],rep:[927,1010],repeat:[40,41,43,258,667,927,953,1010,1073,1216],repeated_config_check:[853,1073],repeatedli:[1117,1124],repetit:[40,41,927,992,1010],replac:[40,41,43,453,454,927,939,995,996,1129,1130],repo:[43,1173],repositori:43,repres:[43,812,813,814,818,831,833,835,903,909,914,1154,1163],represent:[40,41,42,43,800,808,809,810,812,815,853,880,881,903,909,915,916,927,1002,1012,1073],reptil:[1069,1072],reptile_step:1069,request:[1173,1174],requir:[43,812,830,851,852,903,907,927,930,933,1179,1180],resampl:[927,978],reserv:43,reshap:[40,41,453,667,927],reshape_lik:[40,41],respect:[812,815,821,822,827,927,954,1022,1024,1025,1026,1027,1029,1030,1031,1045,1050,1055,1062,1069,1070,1071,1072],respond:43,respons:[43,1073],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,833,834,837,840,841,847,848,849,853,862,927,930,954,995,996,1007,1045,1048,1052,1053,1054,1055,1062,1073,1136,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1173],ret:1073,ret_dict:1073,ret_fn:[853,862,863,1073],retain:[1022,1026],retain_grad:[437,438,1022,1026],retreiv:1073,retrn:[927,1002],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1069,1070,1071,1072],return_sequ:[1190,1199],return_st:[1190,1199],rev:[927,950],revers:[40,41,838,839,927,950,1015],review:43,right:[40,41,43],rk_e:1219,robot:1173,ronald:1173,root:[43,812,830],round:[258,405,667,812,816,830,927,930,1073],row:[927,969,1129,1130],rule:[927,930,1055,1062],run:[43,853,862,1022,1024,1025,1029,1069,1070,1071,1072,1073,1173,1174,1190,1201,1202,1203],safe:[853,862,1073],safety_factor:[853,1073],same:[15,16,17,40,41,43,801,805,806,812,816,833,834,836,838,839,840,841,843,844,853,862,863,897,898,903,907,927,928,942,957,958,961,962,988,994,995,996,1007,1021,1022,1028,1033,1055,1058,1069,1070,1071,1073,1136,1137,1154,1155,1156,1157,1158,1159,1160,1161,1173,1190,1191,1192,1193,1194,1195,1196,1197,1215,1219],same_arrai:[40,41],sampl:[927,978,1038,1039,1129,1130,1132,1133,1154,1162,1173,1190,1198],satisfi:[927,933,1045,1047,1051],save:[40,41,927,1000,1011,1038,1040,1202,1203],save_dir:[403,404,853,868,1073],save_weight:[1202,1203],scalar:[833,837,927,939,988,1014,1018],scale:[853,895,896,1022,1030,1073,1154,1162,1165,1166,1171,1172,1190,1198,1201,1206,1209],scaled_dot_product_attent:1154,scatter:[927,988,995,996],scatter_flat:[135,258,405,536,667,927],scatter_nd:[135,258,405,536,667,927],scene:[1022,1025,1027,1029,1030,1031],schemat:1173,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[840,841],second:[40,41,812,815,821,822,827,833,834,853,884,927,934,946,954,991,999,1009,1022,1024,1025,1029,1069,1071,1073,1206,1207,1208],secondli:1219,sector:[812,813,814],see:[59,358,403,404,453,812,815,821,827,833,837,847,848,849,853,865,866,867,868,903,927,930,979,980,1022,1055,1062,1173,1181,1183,1184,1186,1187,1189],seed:[40,41,179,453,763,1129],seed_valu:[40,41,453,1129,1134],seem:1173,seen_set:[927,967],select:[927,933,1004,1216,1219],self:[40,41,59,358,403,404,853,865,866,867,868,903,1022,1073,1173,1181,1183,1184,1186,1187,1189,1206,1210,1215,1219],sent:1073,seper:[43,927,959],seq:[40,41,42,1136,1137,1202,1203],sequenc:[15,16,17,40,41,42,43,453,851,852,853,862,863,872,873,874,875,876,877,878,879,882,883,897,903,907,927,930,933,935,937,942,943,969,981,984,989,992,993,996,1003,1007,1010,1015,1020,1022,1026,1038,1042,1043,1045,1048,1073,1117,1128,1129,1131,1133,1136,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1171,1172,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1199,1202,1203,1204,1205,1206,1210,1212,1213],sequenti:1173,seri:43,set:[15,18,19,40,41,840,841,843,844,853,882,883,895,896,897,927,929,949,969,997,998,999,1000,1022,1025,1027,1028,1029,1030,1031,1045,1048,1073,1117,1118,1125,1127,1128,1129,1130,1134,1136,1138,1139,1140,1141,1142,1143,1144,1173,1190,1199,1206,1207,1208,1209,1210,1211,1216,1219],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:853,set_default_dtyp:903,set_default_float_dtyp:903,set_default_int_dtyp:903,set_default_nod:1073,set_exception_debug_mod:44,set_framework:[40,41,43,59,1073,1173,1215,1216,1219],set_ivy_backend:[40,41],set_min_bas:927,set_min_denomin:927,set_nest_at_index:1117,set_nest_at_indic:1117,set_queue_timeout:927,set_split_factor:[853,1073],set_stat:[1206,1207,1208,1209,1210,1211],set_tmp_dir:927,set_with_grad:1022,setter:1073,sever:1219,sgd:[1173,1206],shape0:1073,shape:[40,41,43,352,353,354,357,405,417,431,453,667,801,803,804,805,806,807,833,834,838,839,840,841,843,844,853,865,903,907,927,928,937,942,943,956,957,958,960,962,966,969,988,989,992,993,994,995,996,1002,1004,1007,1020,1021,1038,1042,1045,1047,1050,1055,1058,1059,1073,1129,1131,1132,1133,1136,1137,1154,1156,1158,1160,1190,1192,1193,1194,1195,1196,1197,1204,1205],shape_slic:[40,41],shape_to_tupl:927,share:[40,41,1173,1216],shift:1073,should:[40,41,42,43,453,801,806,812,813,814,815,816,817,818,819,820,821,823,825,826,827,829,830,831,833,834,837,840,841,851,852,853,927,937,938,944,988,993,1022,1025,1027,1029,1030,1031,1055,1062,1073,1136,1137,1173],show:[40,41,1173,1219],show_mod_in_top_mod:[1202,1203],show_structur:[1202,1203],show_sub_contain:[40,41],show_v:[1202,1203],show_v_in_top_v:[1202,1203],shown:[40,41],shp:1073,shuffl:[40,41,179,453,763,1129],shuffle_h5_fil:[40,41],side:43,sigmoid:[779,1146,1173,1215],sign:[833,835],signatur:[43,59,358,403,404,405,437,442,446,450,451,453,853,865,866,867,868,903,1022,1181,1183,1184,1186,1187,1189],signific:1219,similar:[43,1154,1165,1190,1201],similarli:[1045,1050],simpl:[43,927,955,1173,1216,1219],simpler:43,simplest:1216,simpli:[40,41,43,1173,1216,1219],simultan:1173,sin:[88,222,363,489,619,812,927,959,1055,1067,1216],sinco:1216,sine:[812,814,829,1055,1057,1066],singl:[40,41,851,852,853,862,863,882,883,884,885,927,1004,1014,1018,1038,1043,1073,1129,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1173,1216,1219],singleton:[833,837,847,848,849],singular:[833,836],sinh:[751,1055],siren:[1173,1181],situat:43,size:[40,41,42,405,430,833,834,836,840,841,847,848,849,853,876,877,878,879,895,896,897,927,930,937,979,980,995,1003,1038,1042,1045,1048,1073,1129,1130,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1190,1191,1192],size_ordered_arrai:[40,41],skew:[1045,1051],skinv:1219,skip:[40,41],slice:[40,41,927,961,962,1073,1117,1124],slice_kei:[40,41],slice_obj:[40,41,1073],slice_via_kei:[40,41],slide:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],slodget:833,slogdet:[110,235,385,511,641],slope:[1146,1148],small:[1167,1168,1169,1170,1171,1172,1173,1204,1205,1216],smaller:[927,939],smallest:[40,41,808,809,810,812,816,927,932],smallest_norm:[358,808,809],softmax:[195,464,779,1146,1154,1165,1166],softplu:[779,1146],solut:43,solv:1219,some:[40,41,43,927,930,1022,1024,1025,1027,1029,1030,1031,1036,1154,1162,1173,1190,1198,1216,1219],some_backend:43,some_namespac:43,someth:[43,1219],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,833,836,844,1073],sort_by_kei:[40,41],sorting_funct:[843,844],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1176,1177,1178,1179,1180,1181,1183,1184,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1217,1218,1219],space:[927,930,959,979,980],spars:[1167,1170],sparse_cross_entropi:1167,spawn:[927,986],special:[43,812,813,814,816,817,818,823,825,829,830],specif:[40,41,43,812,826,827,853,895,927,944,951,952,953,986,1069,1070,1071,1072,1073,1129,1135,1173,1202,1203,1215,1216],specifc:[1129,1130],specifi:[40,41,801,803,804,806,807,833,834,837,838,839,840,841,843,844,847,848,849,853,872,873,874,875,876,877,878,879,882,883,887,889,893,896,897,898,903,907,909,927,930,932,933,939,942,943,960,961,962,968,979,980,1007,1017,1020,1045,1048,1073,1117,1122,1123,1127,1128,1136,1137,1138,1139,1140,1141,1142,1143,1144],sphinx:43,split:[40,41,135,258,405,536,667,853,862,876,877,878,879,895,896,897,927,981,1073],split_arg:1073,split_factor:[853,862,1073],split_func_cal:[853,1073],split_siz:1073,spread:[853,885,1073],sqrt:[88,222,363,489,619,812,833,837],squar:[812,830,833,835,927,969,1045,1047],squeez:[135,258,405,536,667,927],stabil:[843,844,927,1005,1006],stabl:[843,844,927,964,965,997,998,1005,1006],stable_divid:927,stable_pow:927,stack:[40,41,258,667,801,806,833,834,927,1038,1043,1117,1118,1125,1190,1199],stack_imag:[169,311,442,576,737,1038],stacked_dim_s:1073,stage:43,standard:[40,41,808,809,1129,1132,1136,1142,1171,1172,1173,1174,1204,1205],start:[40,41,43,403,404,405,406,427,428,453,853,868,927,930,979,980,1073,1173,1216],starting_index:[40,41],starting_split_factor:[853,1073],state:[1073,1154,1164,1173,1176,1177,1178,1179,1180,1181,1183,1184,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215],statement:1216,static_argnam:[405,410,851,852],static_argnum:[405,410,851,852],statistical_funct:[845,846],std:[453,1129,1132],step:[40,41,405,406,853,927,930,979,980,1022,1024,1025,1027,1029,1030,1031,1069,1070,1071,1072,1073,1173,1206,1207,1208,1209,1210,1211,1215,1219],stephen:1173,stick:1173,still:[40,41,43],stochast:[1206,1211],stop:[40,41,403,404,405,406,427,428,853,868,897,927,930,979,980,1022,1025,1027,1029,1030,1031,1033,1069,1070,1071,1072,1073,1206,1207,1208,1209,1210,1211],stop_gradi:[40,41,306,437,571,731,853,897,1022,1025,1027,1029,1030,1031,1069,1070,1071,1072,1073,1206,1207,1208,1209,1210,1211],stopiter:1073,store:[40,41,927,959,1003,1022,1036,1202,1203],store_var:[1202,1203],str:[15,16,17,40,41,42,43,352,353,354,355,357,358,360,361,801,802,805,808,809,810,851,852,853,862,863,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,897,903,908,909,914,915,916,917,918,919,926,927,933,949,951,952,953,984,986,989,995,996,1045,1048,1050,1069,1070,1071,1072,1073,1117,1121,1136,1137,1179,1180,1190,1201,1202,1203],str_to_nod:1073,straight:1216,strength:[1173,1219],stride:[1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],string:[40,41,43,853,869,871,880,881,886,892,898,899,902,903,907,913,915,916,917,926,927,930,933,949,969,989,1021,1073,1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197,1202,1203],structur:[40,41,42,43,927,944],structural_diff:[40,41],style:43,sub:[40,41,43,833,834,853,876,877,882,883,884,885,927,1003,1069,1070,1071,1072,1073],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1073,sub_mod:[1202,1203],sub_modul:[1212,1213],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1173,1174,1204,1205,1212,1213],subsequ:43,subset:43,substr:[40,41],suffici:[1045,1050],suggest:1173,suitabl:[1038,1043],sum:[40,41,405,430,431,833,837,853,882,883,884,885,897,927,948,952,995,996,1073,1136,1137,1143],summat:[40,41,1136,1137],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,118,121,123,125,126,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,196,198,199,201,202,203,204,205,206,207,212,213,214,215,216,218,219,220,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,312,313,314,316,317,318,319,321,322,325,326,327,328,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,353,354,355,356,357,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,391,393,396,398,400,401,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,449,452,454,456,457,458,459,460,461,462,465,466,468,469,470,471,472,473,474,479,480,481,482,483,485,486,487,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,512,513,514,515,517,519,522,524,526,527,530,531,532,533,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,572,573,574,575,577,578,579,581,582,583,587,588,589,590,592,593,594,595,596,597,598,602,603,604,609,610,611,612,613,615,616,617,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,642,643,644,645,647,649,652,654,656,657,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,732,733,734,735,736,738,739,740,742,743,744,745,746,747,749,750,752,753,754,755,756,757,758,759,760,761,762,764,765,766,767,768,769,771,772,773,774,775,776,777,780,781,782,783,784,785,786,788,789,791,792,793,794,795,796,797,802,803,804,805,806,807,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,839,841,844,846,848,849,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1172,1173,1177,1178,1180,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1218,1219],supports_inplac:927,suppos:1219,sure:43,svd:[110,235,385,511,641,833],swap:[40,41,927,1009],swapax:[40,41,536,667,927,1219],symmetr:[1045,1051],syntax:[403,405,437,442,446,450,451,453],tab:1173,take:[43,927,978],taken:[43,833,834,1136,1138,1139,1140,1142,1144],tan:[751,1055,1058],tangent:[812,831,1055,1058,1059,1060,1067,1068,1146,1153],tanh:[88,222,363,489,619,779,812,1055,1146],target:[40,41,853,869,872,873,874,875,876,877,878,879,882,883,884,885,898,1073,1173],target_dict:[40,41],task:[43,1069,1070,1071,1072],team:[43,1219],templat:1173,temporari:[927,1000,1011],tensor:[40,41,43,405,430,431,853,871,903,913,927,930,932,937,979,980,983,985,988,989,993,995,996,1003,1021,1073,1129,1130,1131,1154,1162,1164,1173,1190,1198,1200,1206,1207,1208,1209,1210,1211,1215,1216],tensorflow:[43,1045,1050,1154,1156,1158,1160,1173,1190,1192,1194,1196,1216,1219],term:[40,41,43,1154,1164,1173,1190,1200],termcolor:[40,41,42],termin:[40,41,42,1073],test:[43,812,819,820,847,848,849,903,918,919],test_array_api:43,tf_concat:1173,than:[40,41,43,808,809,812,813,816,823,825,830,833,837,838,839,853,897,927,930,939,957,976,983,1004,1007,1022,1028,1073,1129,1133,1173,1216],thei:[40,41,1055,1059,1069,1070,1071,1129,1130,1173,1212,1213,1216],them:[1173,1219],themselv:[1117,1118],therefor:43,thi:[40,41,42,43,801,802,812,826,827,833,835,840,841,853,875,879,885,892,897,902,927,930,959,991,993,999,1022,1025,1027,1028,1029,1030,1031,1036,1045,1048,1073,1117,1121,1126,1136,1138,1139,1140,1141,1142,1143,1144,1154,1163,1173,1202,1203,1206,1207,1208,1209,1210,1211,1215,1216,1219],thing:[43,1173],those:[40,41,43,833,836,927,939,1022,1036,1073],though:43,thought:43,threshold:[927,983,985],through:[40,41,43],tick:43,tickbox:43,tile:[258,536,667,927],time:[43,927,1010,1022,1025,1029,1069,1070,1071,1072,1073,1129,1130,1154,1164,1190,1201,1202,1203,1219],timeout:[40,41,42,853,862,863,927,991,999,1073],timestep:[1154,1164,1190,1199],titl:[43,1173],tmp_dir:927,tmp_dr:[927,1000],to_appli:[40,41],to_clon:[853,1073],to_dev:[40,41,128,252,403,529,659,853],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[853,1073],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1173],to_ivy_modul:[197,787,1173,1179],to_json:[40,41],to_kv_fn:[1154,1165],to_kv_v:[1154,1165],to_list:[40,41,405,667,927],to_multi_dev:[40,41],to_mut:[1117,1119,1126],to_n:[15,40,41,1173],to_nod:1073,to_numpi:[40,41,405,667,927,1173,1215],to_out_fn:[1154,1165],to_out_v:[1154,1165],to_q_fn:[1154,1165],to_q_v:[1154,1165],to_raw:[40,41],to_scalar:[405,667,927],todo:[1073,1173,1174],togeth:[40,41,1212,1213],tool:[1173,1216],top_mod:[1202,1203],topic:1219,torch:[43,851,852,1173,1215,1216,1219],torch_concat:1173,torchfcmodel:1215,total:[40,41,42,853,899,1073],total_mem_on_dev:853,total_mem_on_nod:1073,tpu:[853,900,1073],tpu_is_avail:[403,529,659,853,1073],trace:[40,41,927,976],track:[43,853,1073,1117,1126,1202,1203],track_submod_call_ord:[1202,1203],track_submod_ret:[1202,1203],trail:[1204,1205],train:[1022,1024,1025,1029,1173,1174],trainabl:[1022,1028,1173,1174,1179,1180,1202,1203,1212],trainer:1173,tran:1219,transform:[1154,1162,1163],transpos:[40,41,135,258,405,667,853,884,927,1073,1154,1156,1158,1160,1190,1192,1194,1196],travers:[15,18,19,40,41,1117,1126],treat:[40,41,851,852],tri:[40,41],triangular:[801,806],trigonometr:[1055,1056,1058],tril:[77,211,352,478,608,801],trim_kei:[40,41],trust:[1022,1029,1206,1208],truth:[812,821,822,927,954,1052,1053,1054],try_else_non:927,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[853,1073],tune_dev_alloc:853,tune_dev_split:853,tune_node_alloc:1073,tune_node_split:1073,tune_step:[853,1073],tupl:[15,16,17,18,19,40,41,43,352,353,354,357,801,802,803,804,807,833,836,837,838,839,845,846,847,848,849,851,852,927,943,959,960,1002,1020,1073,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1131,1136,1138,1139,1140,1141,1142,1143,1144],tutori:43,two:[40,41,801,806,833,834,835,836,927,930,934,946,982,1009,1045,1048],type:[15,18,40,41,42,43,59,360,361,403,404,801,802,803,804,805,806,807,809,810,812,813,814,815,816,817,818,819,820,821,822,823,825,826,827,829,830,831,833,834,837,838,839,843,844,847,848,849,853,865,866,867,868,880,881,885,897,903,907,908,909,913,914,915,916,917,918,919,926,927,928,930,933,942,944,954,957,958,960,969,976,988,989,994,1008,1018,1021,1022,1028,1033,1055,1062,1073,1173,1181,1183,1184,1186,1187,1189,1202,1203,1216],types_to_iteratively_nest:[40,41,42],uint8:[1038,1040,1044],uint8_img_to_float_img:1038,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[812,815],underwai:43,unecessari:43,unfairli:43,unif:1073,unifi:[40,41,853,882,883,884,885,897,1073,1173],uniform:[40,41,1129,1130,1132,1133,1181,1183,1184,1187,1188],uniformli:[1129,1131,1133],unify_arrai:1073,unify_it:1073,unify_nest:1073,uniniti:[801,803],union:[15,18,19,40,41,43,352,353,354,355,357,358,360,361,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,835,836,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,871,876,877,878,879,897,898,903,907,908,909,913,914,915,916,917,918,919,926,927,928,929,930,932,933,934,935,937,939,940,941,942,943,945,946,947,948,951,952,953,954,956,957,958,959,960,961,962,966,968,969,970,977,978,979,980,982,983,984,985,988,989,992,993,994,995,996,1001,1002,1003,1004,1007,1009,1010,1012,1013,1014,1015,1017,1018,1019,1020,1021,1073,1117,1118,1119,1125,1126],uniqu:[853,862,863,1069,1070,1071,1072,1073,1117,1121],unique_kwarg:1073,unit:[43,853,1055,1056,1057,1073,1146,1147,1148,1149],unitari:[833,836],unless:[927,988,1021],unlik:[853,1073],unnorm:[1129,1130],unpack:[927,1017],unrol:[1154,1164],unset:1216,unset_debug_mod:44,unset_default_devic:853,unset_default_dtyp:903,unset_default_float_dtyp:903,unset_default_int_dtyp:903,unset_framework:[59,1216],unset_with_grad:1022,unstack:[40,41,135,258,405,536,667,927],until:43,unus:[851,852],updat:[40,41,405,430,431,853,862,927,974,995,996,1022,1024,1025,1027,1029,1030,1031,1069,1070,1071,1073,1117,1122,1123,1127,1128,1154,1164,1173,1174,1179,1180,1206,1207,1208,1209,1210,1211,1216,1219],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1129,1133],upper_depth:[1202,1203],upstream:43,usabl:[1173,1219],usag:[853,897,1073],use:[40,41,42,43,453,853,862,863,888,900,927,992,1005,1006,1045,1050,1073,1154,1165,1171,1172,1173,1204,1205,1216,1219],used:[40,41,43,453,833,834,853,862,892,895,896,902,903,914,927,964,965,981,995,996,997,998,1021,1022,1029,1030,1045,1048,1069,1070,1071,1072,1073,1117,1126,1190,1201,1206,1208,1209,1215,1216],used_dev:[853,862],used_mem_on_dev:853,used_mem_on_nod:1073,used_node_str:1073,used_node_strs_dict:1073,useful:[40,41,853,897,1073,1154,1163,1173,1216],user:[1173,1190,1201,1202,1203,1216,1219],uses:1173,using:[40,41,43,1022,1024,1025,1117,1120,1124,1136,1137,1154,1162,1166,1173,1190,1198,1215,1216,1219],util:[853,886,1073],utility_funct:[847,848,849],v_with_top_v_key_chain:[1202,1203],val:[40,41,405,422,423,424,927,972,973,974,997,998],valid:[847,848,849,903,908,927,1005,1006,1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],valid_dtyp:903,valu:[40,41,405,812,816,821,822,833,835,836,837,840,841,843,844,845,846,853,865,896,897,927,928,930,932,939,940,941,943,944,950,954,959,960,961,962,977,979,980,983,985,991,992,993,994,995,996,997,998,999,1015,1018,1019,1020,1022,1026,1029,1038,1044,1052,1053,1054,1055,1063,1064,1065,1069,1070,1071,1073,1117,1121,1122,1123,1127,1128,1129,1132,1133,1136,1138,1140,1154,1165,1166,1171,1172,1190,1201,1204,1205,1206,1208],value_is_nan:927,vanilla:[1069,1071],var_shap:1181,variabl:[15,16,17,18,19,40,41,306,437,571,731,927,936,972,973,974,975,976,1008,1022,1025,1026,1027,1028,1029,1030,1031,1033,1036,1069,1070,1071,1072,1154,1165,1171,1172,1179,1180,1181,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],variable_data:[437,731,1022],varianc:[40,41,1136,1144,1219],varieti:1216,variou:[43,1173],vector:[40,41,446,449,833,836,837,927,941,946,1045,1051,1154,1163,1190,1200],vector_norm:[40,41,110,235,385,511,641,833],vector_to_skew_symmetric_matrix:[173,315,446,580,741,1045],verbos:1218,veri:[43,1173],verifi:43,via:[1117,1118,1125,1216],view:[1038,1043],vision:1173,visual:1216,volum:[1154,1159],vw_tm1:[1022,1025,1029],wai:[1216,1219],wait:[40,41,42,43],want:[43,1173,1216,1219],warn:[59,66,67,68,69,70],warp:[442,443,1038,1039],watch:1215,websit:43,weight:[1022,1024,1025,1027,1029,1030,1031,1154,1163,1164,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1202,1203,1206,1208,1209],weight_initi:[1190,1191,1192,1193,1194,1195,1196,1197,1199,1200],weights_path:[1202,1203],well:[40,41,927,968],were:[40,41,1073],what:[43,1173],when:[40,41,42,43,833,836,853,927,938,1006,1019,1073,1173,1202,1203,1216,1219],where:[40,41,43,258,405,667,812,824,833,836,847,848,849,927,930,937,939,943,956,970,977,988,1020,1117,1118,1125,1129,1130],wherea:43,wherebi:[1117,1126],whether:[15,18,19,40,41,42,812,820,847,848,849,851,852,853,871,884,888,892,897,900,902,903,913,917,918,919,926,927,929,934,935,947,950,955,959,966,968,971,975,976,981,1001,1008,1017,1018,1022,1025,1026,1027,1028,1029,1030,1031,1033,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1146,1147,1154,1162,1173,1179,1180,1190,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211],which:[40,41,42,43,453,801,802,803,804,805,806,807,808,809,810,833,834,837,838,839,840,841,843,844,845,846,847,848,849,851,852,853,862,863,871,876,877,878,879,882,883,884,885,887,889,893,895,896,897,903,908,913,917,926,927,930,933,942,944,946,947,948,950,960,961,962,963,969,970,978,979,980,987,988,989,990,992,995,996,1003,1007,1017,1019,1021,1022,1025,1026,1027,1029,1030,1031,1033,1035,1036,1038,1040,1045,1048,1055,1059,1073,1117,1121,1122,1123,1127,1128,1129,1130,1131,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1165,1166,1173,1179,1180,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1213,1215,1216],whilst:43,whitespac:[40,41,42],who:43,whose:[801,806,812,813,814,817,818,829,831,833,834,838,839,927,933,938,1136,1137,1138,1139,1140,1142,1144],why:[1173,1174],width:[1038,1043],wiki:1219,wikipedia:1219,window:[1038,1043,1154,1155,1156,1157,1158,1159,1160,1161,1190,1191,1192,1193,1194,1195,1196,1197],wise:[40,41,812,815,821,822,826,827,927,939,954,957,958,983,985,994,1022,1025,1027,1029,1031,1052,1053,1054,1055,1056,1057,1058,1059,1062,1063,1064,1065,1067,1146,1147,1148,1149,1150,1151,1152,1153],wish:1216,with_bia:[1190,1200],with_cal:[927,950],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1022,1032],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1073,with_partial_v:[1202,1203],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,405,432,927,1003,1073],with_to_kv_fn:[1190,1201],with_to_out_fn:[1190,1201],with_to_q_fn:[1190,1201],within:[15,18,19,43,833,836,927,930,1129,1133],without:[40,41,43,927,991,993,999,1117,1119,1216],wonder:1173,word:[15,16,17,927,930,1129,1133,1179,1180],work:[43,1215],worker:[853,862,863,1073],worker_class:[853,862,863,1073],worker_kwarg:1073,would:[43,1146,1151,1173,1216,1219],wrap:[15,40,41,42,43,403,405,437,442,446,450,451,453,927,938,1022,1036,1173],write:[40,41,43,1173,1174,1219],written:[43,1173,1219],ws_new:[1022,1025,1027,1029,1030,1031],x1_i:[812,815,821,822,827,927,954,1055,1062],x2_i:[812,815,821,822,827,927,954,1055,1062],x_feat_dim:[1154,1165],x_i:[812,813,814,816,817,818,819,820,823,825,826,829,830,831],x_in:[1173,1215],x_inv:[1045,1047],x_max:[405,927,939],x_min:[405,927,939],x_sub:1073,xkk:1219,xkkm1:1219,xkm1km1:1219,xs0:1073,xs_t:1073,year:[1173,1219],yet:[1117,1126,1219],yield:[927,1019],you:[43,1173,1215,1216,1219],your:[1173,1174,1215,1216,1219],your_awesome_project:1216,yourself:[43,1173],yourslef:43,youtub:43,zero:[40,41,77,211,352,478,608,801,803,806,812,826,827,833,837,847,848,849,927,943,988,995,996,1020,1021,1022,1024,1025,1029,1030,1154,1162,1173,1181,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1206,1207,1208,1209],zero_pad:[258,405,536,667,927],zeros_lik:[135,258,405,536,667,927],zip:1073,zk_e:1219},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","asarray","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":950,"function":[77,83,88,109,115,117,119,120,122,124,211,217,222,234,240,242,244,245,247,248,352,358,363,384,390,392,394,395,397,399,478,484,489,510,516,518,520,521,523,525,608,614,619,640,646,648,650,651,653,655,801,808,812,832,838,840,842,843,845,847],Ones:1186,Using:1216,abs:[259,537,668,928],aco:[752,1056],acosh:[89,223,364,490,620,813],activ:[195,339,464,600,779,1146,1176],adam:1207,adam_step:1024,adam_upd:1025,algebra:[110,173,235,315,385,446,511,580,641,741,833],all:[125,249,400,526,656,848],all_equ:929,all_nested_indic:1118,ani:[126,250,401,527,657,849],api:[0,43,75,209,350,476,606,799],arang:[136,260,406,538,669,930],arg_nam:931,argmax:[118,243,393,519,649,841],argmin:[137,407,539,670,932],args_to_ivi:16,args_to_n:17,argsort:[121,246,396,522,652,844],arithmet:1,arrai:[0,3,43,75,138,209,261,350,408,476,540,606,671,799,933],array_equ:[262,672,934],arrays_equ:935,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:802,asin:[753,1057],asinh:[90,365,491,621,814],assert_supports_inplac:936,atan2:[755,1059],atan:[754,1058],atanh:[756,1060],attribut:5,backend:[43,73],bilinear_resampl:[170,312,443,577,738,1039],binary_cross_entropi:1168,bitwis:7,bitwise_and:[91,224,366,492,622,815],broadcast_to:[263,673,937],builder:51,cache_fn:938,cast:[139,264,409,541,674,907],ceil:[92,225,367,493,623,816],choleski:[742,1046],choose_random_framework:61,citat:1173,clear_framework_stack:62,clear_mem_on_dev:[661,869],clip:[265,675,939],clip_matrix_norm:940,clip_vector_norm:941,clone:1088,clone_arrai:1089,clone_it:1090,clone_nest:1091,clonedit:1075,cloneditem:1074,clonednest:1076,closest_valid_dtyp:908,code:1219,comparison:9,compil:[266,410,676,851,852],concaten:[140,267,411,542,677,942],constant:[76,210,351,477,607,800],constant_pad:[268,543,678,943],contain:[40,41],container_typ:[679,944],content:1173,contribut:43,conv1d:[201,342,468,791,1155,1191],conv1d_transpos:[202,343,469,792,1156],conv1dtranspos:1192,conv2d:[203,344,470,602,793,1157,1193],conv2d_transpos:[204,345,471,794,1158],conv2dtranspos:1194,conv3d:[205,346,472,603,795,1159,1195],conv3d_transpos:[206,347,473,796,1160],conv3dtranspos:1196,convers:15,convert:[197,787,1179],convert_dtyp:909,copy_arrai:[680,945],copy_nest:1119,core:[127,251,402,528,658,850],cos:[93,368,494,624,817],cosh:[94,369,495,625,757,818,1061],cprint:1218,creat:43,creation:[77,211,352,478,608,801],cross:[269,681,946],cross_entropi:1169,cumprod:[141,270,412,682,947],cumsum:[683,948],current_framework:63,current_framework_str:[684,949],data:[83,87,217,221,358,362,484,488,614,618,808,811],debug_mod:45,debugg:44,default_devic:870,default_dtyp:910,default_float_dtyp:911,default_int_dtyp:912,default_nod:1092,depthwise_conv2d:[207,348,474,604,797,1161],depthwiseconv2d:1197,design:43,dev:[130,254,531,662,871],dev_clon:872,dev_clone_arrai:873,dev_clone_it:874,dev_clone_nest:875,dev_dist:876,dev_dist_arrai:877,dev_dist_it:878,dev_dist_nest:879,dev_from_str:[131,255,532,663,880],dev_to_str:[132,256,533,664,881],dev_unifi:882,dev_unify_arrai:883,dev_unify_it:884,dev_unify_nest:885,dev_util:886,devclonedit:856,devcloneditem:855,devclonednest:857,devdistit:859,devdistitem:858,devdistnest:860,devic:[20,128,252,403,529,659,853],devmapp:862,devmappermultiproc:863,diagon:[111,236,386,512,642,834],distribute_nest:1093,divid:1062,document:1173,dropout:[1162,1198],dtype:[142,271,413,544,685,903,913],dtype_bit:[143,272,414,545,686,914],dtype_from_str:[144,273,415,546,687,915],dtype_to_str:[145,274,416,547,688,916],ecosystem:52,einops_rearrang:951,einops_reduc:952,einops_repeat:953,einsum:[187,330,456,592,771,1137],elementwis:[88,222,363,489,619,812],empti:[78,212,353,479,609,803],equal:[95,370,496,626,954],erf:[452,758,1063],execute_with_gradi:[167,307,438,572,732,1026],exist:955,exp:[759,1064],expand_dim:[275,689,956],finfo:[85,219,360,486,616,809],firstlayersiren:1183,flip:[116,241,391,517,647,839],float_img_to_uint8_img:1040,floor:[276,690,957],floormod:[277,691,958],fomaml_step:1070,fork:43,fourier_encod:959,framework:59,full:[146,278,417,548,692,960],func:72,gather:[147,279,418,549,693,961],gather_nd:[148,280,419,550,694,962],geglu:1177,gelu:[340,465,780,1147,1178],gener:[22,135,258,405,536,667,927],get_all_arrays_in_memori:963,get_all_arrays_on_dev:887,get_framework:64,get_min_bas:964,get_min_denomin:965,get_num_dim:[695,966],get_referrers_recurs:967,glorotuniform:1184,gpu_is_avail:[888,1094],gradient:[24,166,306,437,571,731,1022],gradient_descent_upd:1027,gradient_imag:[171,313,444,578,739,1041],gym:53,handler:59,has_nan:968,ident:[149,281,420,551,696,969],iinfo:[86,220,361,487,617,810],imag:[26,169,311,442,576,737,1038],index_nest:1120,indices_wher:[150,282,421,697,970],initi:1181,inplac:11,inplace_arrays_support:971,inplace_decr:[151,283,422,552,698,972],inplace_incr:[152,284,423,553,699,973],inplace_upd:[153,285,424,554,700,974],inplace_variables_support:975,inv:[743,1047],invalid_dtyp:917,is_arrai:[154,286,425,555,701,976],is_float_dtyp:918,is_int_dtyp:919,is_vari:[168,308,439,573,733,1028],isfinit:[96,226,371,497,627,819],isinf:[287,556,702,977],isnan:[97,227,372,498,628,820],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,798,1215,1216,1219],ivymodul:[198,788],jax:74,keep:43,lamb:1208,lamb_upd:1029,lar:1209,lars_upd:1030,layer:[200,341,467,601,790,1154,1190],layer_norm:1172,layernorm:1205,leaky_relu:[781,1148],less:[98,228,373,499,629,821],less_equ:[99,374,500,630,822],linalg:[28,1045],linear:[110,173,235,315,385,446,511,580,641,741,833,1163,1200],linear_resampl:[155,288,426,557,703,978],linspac:[156,289,427,558,704,979],list:43,log10:[100,375,501,631,823],log1p:[101,376,502,632,824],log2:[102,377,503,633,825],log:[760,1065],logic:[30,177,320,450,584,748,1052],logical_and:[321,749,1053],logical_not:[103,229,378,504,634,826],logical_or:[104,322,379,505,635,750,827,1054],logspac:[157,290,428,559,705,980],loss:1167,lstm:1199,lstm_updat:1164,maml_step:1071,manipul:[115,240,390,516,646,838],map:1121,map_nest_at_index:1122,map_nest_at_indic:1123,match_kwarg:981,math:[32,178,323,451,585,751,1055],matmul:[291,560,706,982],matrix_norm:[174,316,447,581,744,1048],maximum:[707,983],mech:54,memori:55,meshgrid:[292,708,984],meta:[34,1069],method:[109,234,384,510,640,832],min:[123,398,524,654,846],minimum:[709,985],model:56,modul:[1202,1203,1215],multi:1073,multi_head_attent:1165,multi_index_nest:1124,multidevcontain:42,multidevit:866,multidevitem:865,multidevnest:867,multiheadattent:1201,multinodeit:1079,multinodeitem:1078,multinodenest:1080,multinomi:[180,325,454,587,764,1130],multiprocess:[710,986],mxnet:208,nativ:1215,neg:[105,230,380,506,636,828],nest:1117,nested_indices_wher:1125,nested_map:1126,network:1215,next:1173,node:[1073,1095],node_dist:1096,node_dist_arrai:1097,node_dist_it:1098,node_str:1099,node_to_str:1100,node_util:1101,nodedistit:1082,nodedistitem:1081,nodedistnest:1083,nodemapp:1085,nodemappermultiproc:1086,norm:[1171,1204],num_arrays_in_memori:987,num_arrays_on_dev:889,num_cpu_cor:890,num_gpu:[133,891,1102],numpi:349,nutshel:1173,one_hot:[158,429,561,711,988],ones:[79,213,354,480,610,804,989],ones_lik:[80,214,355,481,611,805],oper:[1,3,7,9,11,13],optim:[1206,1210],optimizer_upd:1031,overview:1173,percent_used_mem_on_dev:892,percent_used_mem_on_nod:1103,pinv:[317,745,1049],portabl:1219,print_all_arrays_in_memori:990,print_all_arrays_on_dev:893,profil:[129,253,404,530,660,868,1087],pull:43,queue_timeout:991,randint:[181,326,588,765,1131],random:[36,179,324,453,586,763,1129],random_crop:1042,random_norm:[182,327,589,766,1132],random_uniform:[183,328,590,767,1133],reduce_max:[188,331,457,593,772,1138],reduce_mean:[189,332,458,594,773,1139],reduce_min:[190,333,459,595,774,1140],reduce_prod:[191,334,460,596,775,1141],reduce_std:[335,1142],reduce_sum:[192,336,461,597,776,1143],reduce_var:[193,337,462,598,777,1144],reduct:[38,186,329,455,591,770,1136],reflect:13,relu:[782,1149],repeat:[293,712,992],reptile_step:1072,request:43,reshap:[713,993],robot:57,round:[294,714,994],run:1216,scaled_dot_product_attent:1166,scatter_flat:[159,295,430,562,715,995],scatter_nd:[160,296,431,563,716,996],search:[117,242,392,518,648,840],seed:[184,768,1134],sequenti:[1212,1213],set:[119,244,394,520,650,842],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:894,set_default_dtyp:920,set_default_float_dtyp:921,set_default_int_dtyp:922,set_default_nod:1104,set_exception_debug_mod:48,set_framework:65,set_min_bas:997,set_min_denomin:998,set_nest_at_index:1127,set_nest_at_indic:1128,set_queue_timeout:999,set_split_factor:[895,1105],set_tmp_dir:1000,set_with_grad:1032,sgd:1211,shape:[717,1001],shape_to_tupl:1002,shuffl:[185,769,1135],sigmoid:[783,1150],signatur:[109,234,384,510,640,832],sin:[106,231,381,507,637,829],sinh:[761,1066],siren:1187,slodget:835,slogdet:[112,237,387,513,643],softmax:[196,466,784,1151],softplu:[785,1152],sort:[120,245,395,521,651,843],sparse_cross_entropi:1170,split:[161,297,432,564,718,1003],split_factor:[896,1106],split_func_cal:[897,1107],sqrt:[107,232,382,508,638,830],squeez:[162,298,433,565,719,1004],stable_divid:1005,stable_pow:1006,stack:[299,720,1007],stack_imag:[172,314,445,579,740,1043],standard:43,statist:[122,247,397,523,653,845],stop_gradi:[309,440,574,734,1033],str_to_nod:1108,submodul:43,supports_inplac:1008,svd:[113,238,388,514,644,836],swapax:[566,721,1009],tan:[762,1067],tanh:[108,233,383,509,639,786,831,1068,1153],tensorflow:475,tile:[300,567,722,1010],tmp_dir:1011,to_dev:[134,257,534,665,898],to_ivi:18,to_ivy_modul:[199,789,1180],to_list:[723,1012],to_n:19,to_nod:1109,to_numpi:[724,1013],to_scalar:[725,1014],todo:43,torch:605,total_mem_on_dev:899,total_mem_on_nod:1110,tpu_is_avail:[535,666,900,1111],train:1215,trainabl:1215,transpos:[163,301,434,726,1015],tree:1173,tril:[81,215,356,482,612,806],try_else_non:1016,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,217,221,358,362,484,488,614,618,808,811],uint8_img_to_float_img:1044,unifi:1112,unify_arrai:1113,unify_it:1114,unify_nest:1115,unset_debug_mod:49,unset_default_devic:901,unset_default_dtyp:923,unset_default_float_dtyp:924,unset_default_int_dtyp:925,unset_framework:71,unset_with_grad:1034,unstack:[164,302,435,568,727,1017],updat:43,used_mem_on_dev:902,used_mem_on_nod:1116,util:[124,248,399,525,655,847],valid_dtyp:926,value_is_nan:1018,variabl:[310,441,575,735,1035],variable_data:[736,1036],vector_norm:[114,239,389,515,645,837],vector_to_skew_symmetric_matrix:[176,319,449,583,747,1051],verbos:1217,vision:58,where:[303,728,1019,1173],why:1219,with_grad:1037,wrapper:72,write:1216,your:43,zero:[82,216,357,483,613,807,1189],zero_pad:[304,569,729,1020],zeros_lik:[165,305,436,570,730,1021]}})